{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///D:/OfficeProject/lissnify23-9-25/elysian/Front-end/lissnify/src/config/api.ts"],"sourcesContent":["// API Configuration\r\n\r\nexport const API_CONFIG = {\r\n  // Update this URL to match your backend server\r\n  BASE_URL: \"http://localhost:8000\", // Real backend URL\r\n  \r\n  // API Endpoints\r\n  ENDPOINTS: {\r\n    // Auth endpoints\r\n    REGISTER: \"/api/register/\",\r\n    LOGIN: \"/api/login/\",\r\n    LOGOUT: \"/api/logout/\",\r\n    VERIFY_OTP: \"/api/verify-otp/\",\r\n    FORGOT_PASSWORD: \"/api/forgot-password/\",\r\n    \r\n    // User endpoints\r\n    USER_PROFILE: \"/api/user-profile/\",\r\n    LISTENER_PROFILE: \"/api/listener-profile/\",\r\n    \r\n    // Category endpoints\r\n    CATEGORIES: \"/api/categories/\",\r\n    \r\n    // Community endpoints\r\n    COMMUNITY_POSTS: \"/api/community-posts/\",\r\n    COMMUNITY_POST_DETAIL: \"/api/community-posts/\",\r\n    COMMUNITY_POST_LIKE: \"/api/community-posts/\",\r\n    COMMUNITY_POST_COMMENTS: \"/api/community-posts/\",\r\n    \r\n    // Connection endpoints\r\n    CONNECTIONS: \"/api/connections/\",\r\n    CONNECTION_REQUEST: \"/api/connection-request/\",\r\n    ACCEPT_CONNECTION: \"/api/accept-connection/\",\r\n    LISTENERS_BOP: \"/api/listeners-bop/\",\r\n    ACCEPTED_LIST_SEEKER: \"/api/accepted-list-seeker/\",\r\n    GET_CONNECTION_LIST: \"/api/get-connection-list/\",\r\n    \r\n    // Blog endpoints\r\n    BLOGS: \"/api/blogs/\",\r\n    BLOG_DETAIL: \"/api/blogs/\",\r\n    BLOG_LIKE: \"/api/blogs/\",\r\n    BLOG_TOGGLE_LIKE: \"/api/blogs/\",\r\n    BLOG_LIKES: \"/api/blogs/\",\r\n    \r\n    // Notification endpoints\r\n    NOTIFICATIONS: \"/api/notifications/\",\r\n    NOTIFICATION_DETAIL: \"/api/notifications/\",\r\n    NOTIFICATION_MARK_ALL_READ: \"/api/notifications/mark-all-read/\",\r\n    NOTIFICATION_STATS: \"/api/notifications/stats/\",\r\n    NOTIFICATION_SETTINGS: \"/api/notifications/settings/\",\r\n    CREATE_MESSAGE_NOTIFICATION: \"/api/notifications/create-message/\",\r\n    TEST_NOTIFICATION: \"/api/notifications/test/\",\r\n    \r\n    // Testimonial endpoints\r\n    TESTIMONIALS: \"/api/testimonials/\",\r\n    TESTIMONIAL_DETAIL: \"/api/testimonials/\",\r\n  }\r\n};\r\n\r\n// Helper function to get full API URL\r\nexport const getApiUrl = (endpoint: string): string => {\r\n  return `${API_CONFIG.BASE_URL}${endpoint}`;\r\n};\r\n\r\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AAEb,MAAM,aAAa;IACxB,+CAA+C;IAC/C,UAAU;IAEV,gBAAgB;IAChB,WAAW;QACT,iBAAiB;QACjB,UAAU;QACV,OAAO;QACP,QAAQ;QACR,YAAY;QACZ,iBAAiB;QAEjB,iBAAiB;QACjB,cAAc;QACd,kBAAkB;QAElB,qBAAqB;QACrB,YAAY;QAEZ,sBAAsB;QACtB,iBAAiB;QACjB,uBAAuB;QACvB,qBAAqB;QACrB,yBAAyB;QAEzB,uBAAuB;QACvB,aAAa;QACb,oBAAoB;QACpB,mBAAmB;QACnB,eAAe;QACf,sBAAsB;QACtB,qBAAqB;QAErB,iBAAiB;QACjB,OAAO;QACP,aAAa;QACb,WAAW;QACX,kBAAkB;QAClB,YAAY;QAEZ,yBAAyB;QACzB,eAAe;QACf,qBAAqB;QACrB,4BAA4B;QAC5B,oBAAoB;QACpB,uBAAuB;QACvB,6BAA6B;QAC7B,mBAAmB;QAEnB,wBAAwB;QACxB,cAAc;QACd,oBAAoB;IACtB;AACF;AAGO,MAAM,YAAY,CAAC;IACxB,OAAO,GAAG,WAAW,QAAQ,GAAG,UAAU;AAC5C","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///D:/OfficeProject/lissnify23-9-25/elysian/Front-end/lissnify/src/utils/api.ts"],"sourcesContent":["import { getApiUrl } from '@/config/api';\r\n\r\n\r\n// API Response types\r\nexport interface ApiResponse<T = any> {\r\n  success: boolean;\r\n  data?: T;\r\n  message?: string;\r\n  error?: string;\r\n}\r\n\r\nexport interface RegisterData {\r\n  full_name: string;\r\n  email: string;\r\n  password: string;\r\n  otp: string;\r\n  status: string;\r\n  user_type: string;\r\n  preferences: number[];\r\n  DOB: string;\r\n}\r\n\r\nexport interface LoginData {\r\n  username_or_email:string,\r\n  password: string;\r\n}\r\nexport interface CategoryId{\r\n  category_id:string\r\n}\r\n\r\nexport interface ApiCategory {\r\n  id: number;\r\n  Category_name: string; // Backend uses Category_name field\r\n  name?: string; // Fallback for compatibility\r\n  description: string;\r\n  icon: string;\r\n  supportText: string;\r\n  slug: string;\r\n}\r\n\r\nexport interface Testimonial {\r\n  id: number;\r\n  name: string;\r\n  role: string;\r\n  image: string | null;\r\n  rating: number;\r\n  feedback: string;\r\n  created_at: string;\r\n}\r\nexport interface startDirectChatData {\r\n  listener_id: string;\r\n}\r\n\r\n// Generic API call function\r\nexport const apiCall = async <T>(\r\n  endpoint: string,\r\n  options: RequestInit = {}\r\n): Promise<ApiResponse<T>> => {\r\n  try {\r\n    const url = getApiUrl(endpoint);\r\n    \r\n    const response = await fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      return {\r\n        success: false,\r\n        error: data.message || data.error || `HTTP ${response.status}`,\r\n        data: data\r\n      };\r\n    }\r\n\r\n    return {\r\n      success: true,\r\n      data: data,\r\n      message: data.message\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Network error occurred'\r\n    };\r\n  }\r\n};\r\n\r\n// Specific API functions\r\nexport const registerUser = async (userData: RegisterData): Promise<ApiResponse> => {\r\n  return apiCall('/api/register/', {\r\n    method: 'POST',\r\n    body: JSON.stringify(userData),\r\n  });\r\n};\r\n\r\nexport const loginUser = async (credentials: LoginData): Promise<ApiResponse> => {\r\n  return apiCall('/api/login/', {\r\n    method: 'POST',\r\n    body: JSON.stringify(credentials),\r\n  });\r\n};\r\n\r\nexport const sendOTP = async (email: string): Promise<ApiResponse> => {\r\n  console.log(\"Sending OTP request to:\", getApiUrl('/api/send-otp/'));\r\n  return apiCall('/api/send-otp/', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ email }),\r\n  });\r\n};\r\n\r\nexport const verifyOTP = async (email: string, otp: string): Promise<ApiResponse> => {\r\n  return apiCall('/api/verify-otp/', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ email, otp }),\r\n  });\r\n};\r\n\r\n// Utility function for role-based redirection\r\nexport const getDashboardUrl = (userType: string): string => {\r\n  // Validate and normalize user type\r\n  const normalizedType = userType?.toLowerCase()?.trim();\r\n  \r\n  switch (normalizedType) {\r\n    case 'seeker':\r\n      return '/dashboard/seeker';\r\n    case 'listener':\r\n      return '/dashboard/listener';\r\n    default:\r\n      console.warn('Unknown or invalid user type:', userType, 'redirecting to seeker dashboard as fallback');\r\n      return '/dashboard/seeker';\r\n  }\r\n};\r\n\r\n// Validation function for user types\r\nexport const isValidUserType = (userType: string): boolean => {\r\n  const validTypes = ['seeker', 'listener'];\r\n  return validTypes.includes(userType?.toLowerCase()?.trim());\r\n};\r\n\r\nexport const listenerCarouselData = async () => {\r\n  try {\r\n    const response = await fetch(getApiUrl('/api/listenerList'));\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching listener carousel data:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const listenerCategoryWise = async (categorySlug:string): Promise<ApiResponse> => {\r\n  return apiCall('/api/listenerList/', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ category_id: categorySlug }),\r\n  });\r\n};\r\n\r\nexport const listenerList = async (listenerId: string): Promise<ApiResponse> => {\r\n  return apiCall('/api/listenerList/', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ listener_id: listenerId }),\r\n  });\r\n};\r\n\r\nexport const connectionList = async (): Promise<ApiResponse> => {\r\n  return apiCall('/api/get-connection-list/', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n};\r\nexport const connectedListeners = async (): Promise<ApiResponse> => {\r\n  return apiCall('/api/connections/', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n};\r\n\r\nexport const getRooms = async (): Promise<ApiResponse> => {\r\n  return apiCall('/chat/rooms/', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n}\r\n\r\nexport const startDirectChat = async (listener_id: string): Promise<ApiResponse> => {\r\n  return apiCall('/chat/start-direct/', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ recipient_id:listener_id }),\r\n  });\r\n}\r\n\r\nexport const getMessages = async (room_id: number): Promise<ApiResponse> => {\r\n  return apiCall(`/chat/${room_id}/messages/`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },  \r\n  });\r\n}\r\n\r\nexport const acceptConnection = async (connectionId: number, action: 'accept' | 'reject'): Promise<ApiResponse> => {\r\n  return apiCall('/api/accept-connection/', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      connection_id: connectionId,\r\n      action: action\r\n    }),\r\n  });\r\n}\r\n\r\nexport const connection = async (listener_id: string): Promise<ApiResponse> => {\r\n  return apiCall('/api/connection-request/', {\r\n    method: 'POST',\r\n    headers: { \r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({listener_id:listener_id} ),\r\n  });\r\n}\r\n\r\nexport const getUserProfile = async (): Promise<ApiResponse> => {\r\n  return apiCall('/api/user-profile/', {\r\n    method: 'GET',\r\n    headers: { \r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n}\r\n\r\nexport const updateUserProfile = async (profileData: FormData): Promise<ApiResponse> => {\r\n  try {\r\n    const url = getApiUrl('/api/user-profile/');\r\n    \r\n    const response = await fetch(url, {\r\n      method: 'PUT',\r\n      headers: { \r\n        'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n        // Don't set Content-Type for FormData, let browser set it with boundary\r\n      },\r\n      body: profileData,\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      return {\r\n        success: false,\r\n        error: data.message || data.error || `HTTP ${response.status}`,\r\n        data: data\r\n      };\r\n    }\r\n\r\n    return {\r\n      success: true,\r\n      data: data,\r\n      message: data.message\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Network error occurred'\r\n    };\r\n  }\r\n}\r\n\r\nexport const listener = async (listenerId: string): Promise<ApiResponse> => {\r\n  return listenerList(listenerId);\r\n}\r\n\r\nexport const getCategories = async (): Promise<ApiResponse<ApiCategory[]>> => {\r\n  return apiCall<ApiCategory[]>('/api/categories/', {\r\n    method: 'GET',\r\n  });\r\n}\r\n\r\nexport const getBlogs = async (): Promise<ApiResponse> => {\r\n  return apiCall('/api/blogs/', {\r\n    method: 'GET',\r\n  });\r\n}\r\n\r\nexport const getBlogBySlug = async (slug: string): Promise<ApiResponse> => {\r\n  return apiCall(`/api/blogs/${slug}/`, {\r\n    method: 'GET',\r\n  });\r\n}\r\n\r\n// Testimonial API functions\r\nexport const getTestimonials = async (): Promise<ApiResponse<Testimonial[]>> => {\r\n  return apiCall<Testimonial[]>('/api/testimonials/', {\r\n    method: 'GET',\r\n  });\r\n}\r\n\r\nexport const getTestimonialById = async (id: number): Promise<ApiResponse<Testimonial>> => {\r\n  return apiCall<Testimonial>(`/api/testimonials/${id}/`, {\r\n    method: 'GET',\r\n  });\r\n}\r\n\r\nexport const createTestimonial = async (testimonialData: Omit<Testimonial, 'id' | 'created_at'>): Promise<ApiResponse<Testimonial>> => {\r\n  return apiCall<Testimonial>('/api/testimonials/', {\r\n    method: 'POST',\r\n    body: JSON.stringify(testimonialData),\r\n  });\r\n}\r\n\r\n\r\nexport const updateTestimonial = async (id: number, testimonialData: Partial<Testimonial>): Promise<ApiResponse<Testimonial>> => {\r\n  return apiCall<Testimonial>(`/api/testimonials/${id}/`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(testimonialData),\r\n  });\r\n}\r\n\r\nexport const deleteTestimonial = async (id: number): Promise<ApiResponse> => {\r\n  return apiCall(`/api/testimonials/${id}/`, {\r\n    method: 'DELETE',\r\n  });\r\n}\r\n\r\n// Helper function to check if a listener is already connected\r\nexport const isListenerConnected = (listenerId: string, connectedListeners: any[]): boolean => {\r\n  return connectedListeners.some(conn => \r\n    conn.listener_profile?.l_id === listenerId && conn.status === 'Accepted'\r\n  );\r\n}\r\n\r\n// Blog Like API functions\r\nexport const likeBlog = async (blogId: number): Promise<ApiResponse> => {\r\n  return apiCall(`/api/blogs/${blogId}/like/`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n}\r\n\r\nexport const unlikeBlog = async (blogId: number): Promise<ApiResponse> => {\r\n  return apiCall(`/api/blogs/${blogId}/like/`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n}\r\n\r\nexport const toggleBlogLike = async (blogId: number): Promise<ApiResponse> => {\r\n  return apiCall(`/api/blogs/${blogId}/toggle-like/`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n}\r\n\r\nexport const getBlogLikes = async (blogId: number): Promise<ApiResponse> => {\r\n  return apiCall(`/api/blogs/${blogId}/likes/`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n}\r\n\r\n// Rating and Feedback API functions\r\nexport interface RatingFeedback {\r\n  id: string;\r\n  seeker_name: string;\r\n  rating: number;\r\n  feedback: string;\r\n  created_at: string;\r\n  seeker_avatar?: string;\r\n}\r\n\r\nexport interface RatingFeedbackData {\r\n  listener_id: string;\r\n  rating: number;\r\n  feedback: string;\r\n}\r\n\r\nexport const submitRatingFeedback = async (data: RatingFeedbackData): Promise<ApiResponse<RatingFeedback>> => {\r\n  return apiCall<RatingFeedback>('/api/ratings/', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n}\r\n\r\nexport const getListenerRatings = async (listenerId: string): Promise<ApiResponse<RatingFeedback[]>> => {\r\n  return apiCall<RatingFeedback[]>(`/api/ratings/listener/${listenerId}/`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n}\r\n\r\nexport const getListenerRatingStats = async (listenerId: string): Promise<ApiResponse<{average_rating: number, total_reviews: number}>> => {\r\n  return apiCall<{average_rating: number, total_reviews: number}>(`/api/ratings/listener/${listenerId}/stats/`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n}\r\n\r\n// Unread message API functions\r\nexport const markMessagesAsRead = async (roomId: number): Promise<ApiResponse> => {\r\n  return apiCall(`/chat/${roomId}/mark-read/`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n}\r\n\r\nexport const getUnreadCounts = async (): Promise<ApiResponse<{[roomId: number]: number}>> => {\r\n  return apiCall<{[roomId: number]: number}>('/chat/unread-counts/', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('adminToken') || ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAsDO,MAAM,UAAU,OACrB,UACA,UAAuB,CAAC,CAAC;IAEzB,IAAI;QACF,MAAM,MAAM,CAAA,GAAA,oHAAA,CAAA,YAAS,AAAD,EAAE;QAEtB,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,SAAS;gBACP,gBAAgB;gBAChB,GAAG,QAAQ,OAAO;YACpB;YACA,GAAG,OAAO;QACZ;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,OAAO;gBACL,SAAS;gBACT,OAAO,KAAK,OAAO,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE,SAAS,MAAM,EAAE;gBAC9D,MAAM;YACR;QACF;QAEA,OAAO;YACL,SAAS;YACT,MAAM;YACN,SAAS,KAAK,OAAO;QACvB;IACF,EAAE,OAAO,OAAO;QACd,OAAO;YACL,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD;IACF;AACF;AAGO,MAAM,eAAe,OAAO;IACjC,OAAO,QAAQ,kBAAkB;QAC/B,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB;AACF;AAEO,MAAM,YAAY,OAAO;IAC9B,OAAO,QAAQ,eAAe;QAC5B,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB;AACF;AAEO,MAAM,UAAU,OAAO;IAC5B,QAAQ,GAAG,CAAC,2BAA2B,CAAA,GAAA,oHAAA,CAAA,YAAS,AAAD,EAAE;IACjD,OAAO,QAAQ,kBAAkB;QAC/B,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE;QAAM;IAC/B;AACF;AAEO,MAAM,YAAY,OAAO,OAAe;IAC7C,OAAO,QAAQ,oBAAoB;QACjC,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE;YAAO;QAAI;IACpC;AACF;AAGO,MAAM,kBAAkB,CAAC;IAC9B,mCAAmC;IACnC,MAAM,iBAAiB,UAAU,eAAe;IAEhD,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,QAAQ,IAAI,CAAC,iCAAiC,UAAU;YACxD,OAAO;IACX;AACF;AAGO,MAAM,kBAAkB,CAAC;IAC9B,MAAM,aAAa;QAAC;QAAU;KAAW;IACzC,OAAO,WAAW,QAAQ,CAAC,UAAU,eAAe;AACtD;AAEO,MAAM,uBAAuB;IAClC,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,CAAA,GAAA,oHAAA,CAAA,YAAS,AAAD,EAAE;QACvC,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0CAA0C;QACxD,OAAO,EAAE;IACX;AACF;AAEO,MAAM,uBAAuB,OAAO;IACzC,OAAO,QAAQ,sBAAsB;QACnC,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;YAAE,aAAa;QAAa;IACnD;AACF;AAEO,MAAM,eAAe,OAAO;IACjC,OAAO,QAAQ,sBAAsB;QACnC,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;YAAE,aAAa;QAAW;IACjD;AACF;AAEO,MAAM,iBAAiB;IAC5B,OAAO,QAAQ,6BAA6B;QAC1C,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;IACF;AACF;AACO,MAAM,qBAAqB;IAChC,OAAO,QAAQ,qBAAqB;QAClC,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;IACF;AACF;AAEO,MAAM,WAAW;IACtB,OAAO,QAAQ,gBAAgB;QAC7B,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;IACF;AACF;AAEO,MAAM,kBAAkB,OAAO;IACpC,OAAO,QAAQ,uBAAuB;QACpC,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;YAAE,cAAa;QAAY;IAClD;AACF;AAEO,MAAM,cAAc,OAAO;IAChC,OAAO,QAAQ,CAAC,MAAM,EAAE,QAAQ,UAAU,CAAC,EAAE;QAC3C,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;IACF;AACF;AAEO,MAAM,mBAAmB,OAAO,cAAsB;IAC3D,OAAO,QAAQ,2BAA2B;QACxC,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;YACnB,eAAe;YACf,QAAQ;QACV;IACF;AACF;AAEO,MAAM,aAAa,OAAO;IAC/B,OAAO,QAAQ,4BAA4B;QACzC,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;YAAC,aAAY;QAAW;IAC/C;AACF;AAEO,MAAM,iBAAiB;IAC5B,OAAO,QAAQ,sBAAsB;QACnC,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;IACF;AACF;AAEO,MAAM,oBAAoB,OAAO;IACtC,IAAI;QACF,MAAM,MAAM,CAAA,GAAA,oHAAA,CAAA,YAAS,AAAD,EAAE;QAEtB,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,QAAQ;YACR,SAAS;gBACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YAEvE;YACA,MAAM;QACR;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,OAAO;gBACL,SAAS;gBACT,OAAO,KAAK,OAAO,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE,SAAS,MAAM,EAAE;gBAC9D,MAAM;YACR;QACF;QAEA,OAAO;YACL,SAAS;YACT,MAAM;YACN,SAAS,KAAK,OAAO;QACvB;IACF,EAAE,OAAO,OAAO;QACd,OAAO;YACL,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD;IACF;AACF;AAEO,MAAM,WAAW,OAAO;IAC7B,OAAO,aAAa;AACtB;AAEO,MAAM,gBAAgB;IAC3B,OAAO,QAAuB,oBAAoB;QAChD,QAAQ;IACV;AACF;AAEO,MAAM,WAAW;IACtB,OAAO,QAAQ,eAAe;QAC5B,QAAQ;IACV;AACF;AAEO,MAAM,gBAAgB,OAAO;IAClC,OAAO,QAAQ,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,EAAE;QACpC,QAAQ;IACV;AACF;AAGO,MAAM,kBAAkB;IAC7B,OAAO,QAAuB,sBAAsB;QAClD,QAAQ;IACV;AACF;AAEO,MAAM,qBAAqB,OAAO;IACvC,OAAO,QAAqB,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC,EAAE;QACtD,QAAQ;IACV;AACF;AAEO,MAAM,oBAAoB,OAAO;IACtC,OAAO,QAAqB,sBAAsB;QAChD,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB;AACF;AAGO,MAAM,oBAAoB,OAAO,IAAY;IAClD,OAAO,QAAqB,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC,EAAE;QACtD,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB;AACF;AAEO,MAAM,oBAAoB,OAAO;IACtC,OAAO,QAAQ,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC,EAAE;QACzC,QAAQ;IACV;AACF;AAGO,MAAM,sBAAsB,CAAC,YAAoB;IACtD,OAAO,mBAAmB,IAAI,CAAC,CAAA,OAC7B,KAAK,gBAAgB,EAAE,SAAS,cAAc,KAAK,MAAM,KAAK;AAElE;AAGO,MAAM,WAAW,OAAO;IAC7B,OAAO,QAAQ,CAAC,WAAW,EAAE,OAAO,MAAM,CAAC,EAAE;QAC3C,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;IACF;AACF;AAEO,MAAM,aAAa,OAAO;IAC/B,OAAO,QAAQ,CAAC,WAAW,EAAE,OAAO,MAAM,CAAC,EAAE;QAC3C,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;IACF;AACF;AAEO,MAAM,iBAAiB,OAAO;IACnC,OAAO,QAAQ,CAAC,WAAW,EAAE,OAAO,aAAa,CAAC,EAAE;QAClD,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;IACF;AACF;AAEO,MAAM,eAAe,OAAO;IACjC,OAAO,QAAQ,CAAC,WAAW,EAAE,OAAO,OAAO,CAAC,EAAE;QAC5C,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;IACF;AACF;AAkBO,MAAM,uBAAuB,OAAO;IACzC,OAAO,QAAwB,iBAAiB;QAC9C,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;AACF;AAEO,MAAM,qBAAqB,OAAO;IACvC,OAAO,QAA0B,CAAC,sBAAsB,EAAE,WAAW,CAAC,CAAC,EAAE;QACvE,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;IACF;AACF;AAEO,MAAM,yBAAyB,OAAO;IAC3C,OAAO,QAAyD,CAAC,sBAAsB,EAAE,WAAW,OAAO,CAAC,EAAE;QAC5G,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;IACF;AACF;AAGO,MAAM,qBAAqB,OAAO;IACvC,OAAO,QAAQ,CAAC,MAAM,EAAE,OAAO,WAAW,CAAC,EAAE;QAC3C,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;IACF;AACF;AAEO,MAAM,kBAAkB;IAC7B,OAAO,QAAoC,wBAAwB;QACjE,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,iBAAiB,IAAI;YACrE,gBAAgB;QAClB;IACF;AACF","debugId":null}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":["file:///D:/OfficeProject/lissnify23-9-25/elysian/Front-end/lissnify/src/Components/UserDropdown.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from 'react';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { User, LogOut } from 'lucide-react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { getDashboardUrl } from '@/utils/api';\r\n\r\nconst UserDropdown: React.FC = () => {\r\n  const { user, logout } = useAuth();\r\n  const router = useRouter();\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    router.push('/login');\r\n  };\r\n\r\n  const handleProfileClick = () => {\r\n    if (user?.user_type) {\r\n      const profileUrl = getDashboardUrl(user.user_type) + '/profile';\r\n      router.push(profileUrl);\r\n    }\r\n  };\r\n\r\n  if (!user) return null;\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-3\">\r\n      {/* User Info with Profile Click */}\r\n      <div \r\n        onClick={handleProfileClick}\r\n        className=\"flex items-center space-x-2 px-3 py-2 text-gray-700 rounded-lg cursor-pointer hover:bg-gray-100 transition-all duration-200\"\r\n      >\r\n        <div className=\"w-8 h-8 bg-gradient-to-r from-orange-400 to-yellow-400 rounded-full flex items-center justify-center\">\r\n          <User className=\"w-4 h-4 text-white\" />\r\n        </div>\r\n        <span className=\"font-medium text-lg text-black\">\r\n          Hello, {user.full_name}\r\n        </span>\r\n      </div>\r\n      \r\n      {/* Logout Button */}\r\n      <button\r\n        onClick={handleLogout}\r\n        className=\"flex items-center space-x-2 px-4 py-2 text-red-600 hover:text-red-700 hover:bg-red-50 rounded-lg transition-all duration-200 border border-red-200 hover:border-red-300\"\r\n      >\r\n        <LogOut className=\"w-4 h-4\" />\r\n        <span className=\"text-sm font-medium\">Logout</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDropdown;\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AACA;AACA;AANA;;;;;;AAQA,MAAM,eAAyB;IAC7B,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC/B,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe;QACnB;QACA,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,qBAAqB;QACzB,IAAI,MAAM,WAAW;YACnB,MAAM,aAAa,CAAA,GAAA,mHAAA,CAAA,kBAAe,AAAD,EAAE,KAAK,SAAS,IAAI;YACrD,OAAO,IAAI,CAAC;QACd;IACF;IAEA,IAAI,CAAC,MAAM,OAAO;IAElB,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBACC,SAAS;gBACT,WAAU;;kCAEV,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,kMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;;;;;;kCAElB,8OAAC;wBAAK,WAAU;;4BAAiC;4BACvC,KAAK,SAAS;;;;;;;;;;;;;0BAK1B,8OAAC;gBACC,SAAS;gBACT,WAAU;;kCAEV,8OAAC,0MAAA,CAAA,SAAM;wBAAC,WAAU;;;;;;kCAClB,8OAAC;wBAAK,WAAU;kCAAsB;;;;;;;;;;;;;;;;;;AAI9C;uCAEe","debugId":null}},
    {"offset": {"line": 592, "column": 0}, "map": {"version":3,"sources":["file:///D:/OfficeProject/lissnify23-9-25/elysian/Front-end/lissnify/src/hooks/useNotifications.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport interface Notification {\r\n  id: number;\r\n  recipient: number;\r\n  sender: number;\r\n  notification_type: 'message' | 'connection_request' | 'connection_accepted' | 'connection_rejected' | 'system';\r\n  title: string;\r\n  message: string;\r\n  is_read: boolean;\r\n  created_at: string;\r\n  updated_at: string;\r\n  chat_room_id?: number;\r\n  message_id?: number;\r\n  sender_username: string;\r\n  recipient_username: string;\r\n}\r\n\r\nexport interface NotificationStats {\r\n  total_notifications: number;\r\n  unread_notifications: number;\r\n  message_notifications: number;\r\n  connection_notifications: number;\r\n  system_notifications: number;\r\n}\r\n\r\nexport interface NotificationSettings {\r\n  message_notifications: boolean;\r\n  connection_notifications: boolean;\r\n  system_notifications: boolean;\r\n  email_notifications: boolean;\r\n  push_notifications: boolean;\r\n}\r\n\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000/api';\r\n\r\nexport const useNotifications = () => {\r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n  const [stats, setStats] = useState<NotificationStats | null>(null);\r\n  const [settings, setSettings] = useState<NotificationSettings | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const getAuthHeaders = () => {\r\n    const token = localStorage.getItem('adminToken');\r\n    return {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json',\r\n    };\r\n  };\r\n\r\n  const fetchNotifications = useCallback(async (params?: {\r\n    type?: string;\r\n    is_read?: boolean;\r\n    page?: number;\r\n    page_size?: number;\r\n  }) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const queryParams = new URLSearchParams();\r\n      if (params?.type) queryParams.append('type', params.type);\r\n      if (params?.is_read !== undefined) queryParams.append('is_read', params.is_read.toString());\r\n      if (params?.page) queryParams.append('page', params.page.toString());\r\n      if (params?.page_size) queryParams.append('page_size', params.page_size.toString());\r\n\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/notifications/?${queryParams.toString()}`,\r\n        {\r\n          headers: getAuthHeaders(),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch notifications');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setNotifications(data.notifications);\r\n      return data;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchStats = useCallback(async () => {\r\n    try {\r\n      console.log('📊 Fetching notification stats...');\r\n      const response = await fetch(`${API_BASE_URL}/notifications/stats/`, {\r\n        headers: getAuthHeaders(),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch notification stats');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('📊 Stats received:', data);\r\n      setStats(data);\r\n      return data;\r\n    } catch (err) {\r\n      console.error('❌ Error fetching stats:', err);\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      throw err;\r\n    }\r\n  }, []);\r\n\r\n  const fetchSettings = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/notifications/settings/`, {\r\n        headers: getAuthHeaders(),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch notification settings');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setSettings(data);\r\n      return data;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      throw err;\r\n    }\r\n  }, []);\r\n\r\n  const markAsRead = useCallback(async (notificationId: number) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/notifications/${notificationId}/`, {\r\n        method: 'PATCH',\r\n        headers: getAuthHeaders(),\r\n        body: JSON.stringify({ is_read: true }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to mark notification as read');\r\n      }\r\n\r\n      // Update local state\r\n      setNotifications(prev => \r\n        prev.map(notification => \r\n          notification.id === notificationId \r\n            ? { ...notification, is_read: true }\r\n            : notification\r\n        )\r\n      );\r\n\r\n      // Update stats\r\n      if (stats) {\r\n        setStats(prev => prev ? {\r\n          ...prev,\r\n          unread_notifications: Math.max(0, prev.unread_notifications - 1)\r\n        } : null);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      throw err;\r\n    }\r\n  }, [stats]);\r\n\r\n  const markAllAsRead = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/notifications/mark-all-read/`, {\r\n        method: 'POST',\r\n        headers: getAuthHeaders(),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to mark all notifications as read');\r\n      }\r\n\r\n      // Update local state\r\n      setNotifications(prev => \r\n        prev.map(notification => ({ ...notification, is_read: true }))\r\n      );\r\n\r\n      // Update stats\r\n      setStats(prev => prev ? {\r\n        ...prev,\r\n        unread_notifications: 0\r\n      } : null);\r\n\r\n      return await response.json();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      throw err;\r\n    }\r\n  }, []);\r\n\r\n  const updateSettings = useCallback(async (newSettings: Partial<NotificationSettings>) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/notifications/settings/`, {\r\n        method: 'PUT',\r\n        headers: getAuthHeaders(),\r\n        body: JSON.stringify(newSettings),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update notification settings');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setSettings(data);\r\n      return data;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      throw err;\r\n    }\r\n  }, []);\r\n\r\n  const deleteNotification = useCallback(async (notificationId: number) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/notifications/${notificationId}/`, {\r\n        method: 'DELETE',\r\n        headers: getAuthHeaders(),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to delete notification');\r\n      }\r\n\r\n      // Update local state\r\n      setNotifications(prev => \r\n        prev.filter(notification => notification.id !== notificationId)\r\n      );\r\n\r\n      // Update stats\r\n      if (stats) {\r\n        setStats(prev => prev ? {\r\n          ...prev,\r\n          total_notifications: Math.max(0, prev.total_notifications - 1),\r\n          unread_notifications: Math.max(0, prev.unread_notifications - 1)\r\n        } : null);\r\n      }\r\n\r\n      return true;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      throw err;\r\n    }\r\n  }, [stats]);\r\n\r\n  // Load initial data\r\n  useEffect(() => {\r\n    console.log('🔔 Loading initial notification data...');\r\n    fetchNotifications();\r\n    fetchStats();\r\n    fetchSettings();\r\n  }, [fetchNotifications, fetchStats, fetchSettings]);\r\n\r\n  // Function to refresh stats (can be called from WebSocket)\r\n  const refreshStats = useCallback(() => {\r\n    fetchStats();\r\n  }, [fetchStats]);\r\n\r\n  return {\r\n    notifications,\r\n    stats,\r\n    settings,\r\n    loading,\r\n    error,\r\n    fetchNotifications,\r\n    fetchStats,\r\n    fetchSettings,\r\n    markAsRead,\r\n    markAllAsRead,\r\n    updateSettings,\r\n    deleteNotification,\r\n    refreshStats,\r\n  };\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 810, "column": 0}, "map": {"version":3,"sources":["file:///D:/OfficeProject/lissnify23-9-25/elysian/Front-end/lissnify/src/hooks/useNotificationWebSocket.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\n\r\nexport interface Notification {\r\n  id: number;\r\n  recipient: number;\r\n  sender: number;\r\n  notification_type: 'message' | 'connection_request' | 'connection_accepted' | 'connection_rejected' | 'system';\r\n  title: string;\r\n  message: string;\r\n  is_read: boolean;\r\n  created_at: string;\r\n  updated_at: string;\r\n  chat_room_id?: number;\r\n  message_id?: number;\r\n  sender_username: string;\r\n  recipient_username: string;\r\n}\r\n\r\ninterface WebSocketMessage {\r\n  type: 'notification' | 'unread_count';\r\n  notification?: Notification;\r\n  count?: number;\r\n}\r\n\r\nconst WS_BASE_URL = process.env.NEXT_PUBLIC_WS_URL || 'ws://localhost:8000';\r\n\r\nexport const useNotificationWebSocket = (onNotificationReceived?: () => void) => {\r\n  const [socket, setSocket] = useState<WebSocket | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [newNotification, setNewNotification] = useState<Notification | null>(null);\r\n  const reconnectTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const reconnectAttempts = useRef(0);\r\n  const maxReconnectAttempts = 5;\r\n\r\n  const connect = () => {\r\n    const token = localStorage.getItem('adminToken');\r\n    if (!token) {\r\n      console.error('No access token found');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const wsUrl = `${WS_BASE_URL}/ws/notifications/?token=${token}`;\r\n      console.log(`🔔 Attempting to connect to notification WebSocket (attempt ${reconnectAttempts.current + 1})`);\r\n      const newSocket = new WebSocket(wsUrl);\r\n\r\n      newSocket.onopen = () => {\r\n        console.log('✅ Notification WebSocket connected');\r\n        setIsConnected(true);\r\n        reconnectAttempts.current = 0;\r\n        \r\n        // Request initial unread count\r\n        getUnreadCount();\r\n      };\r\n\r\n      newSocket.onmessage = (event) => {\r\n        try {\r\n          const data: WebSocketMessage = JSON.parse(event.data);\r\n          console.log('🔔 WebSocket message received:', data);\r\n          \r\n          if (data.type === 'notification' && data.notification) {\r\n            console.log('📬 New notification received:', data.notification);\r\n            setNewNotification(data.notification);\r\n            // Call the callback to refresh stats\r\n            if (onNotificationReceived) {\r\n              onNotificationReceived();\r\n            }\r\n            console.log('📬 Notification received, API stats will be refreshed');\r\n          } else if (data.type === 'unread_count' && data.count !== undefined) {\r\n            console.log('📊 Unread count updated:', data.count);\r\n            setUnreadCount(data.count);\r\n          }\r\n        } catch (error) {\r\n          console.error('❌ Error parsing WebSocket message:', error);\r\n        }\r\n      };\r\n\r\n      newSocket.onclose = (event) => {\r\n        console.log('🔌 Notification WebSocket disconnected:', event.code, event.reason);\r\n        setIsConnected(false);\r\n        \r\n        // Attempt to reconnect if not a manual close\r\n        if (event.code !== 1000 && reconnectAttempts.current < maxReconnectAttempts) {\r\n          const delay = Math.pow(2, reconnectAttempts.current) * 1000; // Exponential backoff\r\n          console.log(`🔄 Reconnecting in ${delay}ms (attempt ${reconnectAttempts.current + 1}/${maxReconnectAttempts})`);\r\n          reconnectTimeoutRef.current = setTimeout(() => {\r\n            reconnectAttempts.current++;\r\n            connect();\r\n          }, delay);\r\n        } else if (reconnectAttempts.current >= maxReconnectAttempts) {\r\n          console.error('❌ Max reconnection attempts reached for notification WebSocket');\r\n        }\r\n      };\r\n\r\n      newSocket.onerror = (error) => {\r\n        console.error('❌ Notification WebSocket error:', error);\r\n        // Don't show error immediately on first attempt - let onclose handle retry logic\r\n        if (reconnectAttempts.current === 0) {\r\n          console.log('🔄 Initial notification connection failed, will retry...');\r\n        }\r\n      };\r\n\r\n      setSocket(newSocket);\r\n    } catch (error) {\r\n      console.error('❌ Error creating notification WebSocket:', error);\r\n    }\r\n  };\r\n\r\n  const disconnect = () => {\r\n    if (reconnectTimeoutRef.current) {\r\n      clearTimeout(reconnectTimeoutRef.current);\r\n      reconnectTimeoutRef.current = null;\r\n    }\r\n    \r\n    if (socket) {\r\n      socket.close(1000, 'Manual disconnect');\r\n      setSocket(null);\r\n    }\r\n    setIsConnected(false);\r\n  };\r\n\r\n  const markAsRead = (notificationId: number) => {\r\n    if (socket && isConnected) {\r\n      socket.send(JSON.stringify({\r\n        type: 'mark_read',\r\n        notification_id: notificationId\r\n      }));\r\n    }\r\n  };\r\n\r\n  const getUnreadCount = () => {\r\n    if (socket && isConnected) {\r\n      socket.send(JSON.stringify({\r\n        type: 'get_unread_count'\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Connect on mount with a delay to allow authentication to complete\r\n  useEffect(() => {\r\n    // Delay to ensure authentication is ready\r\n    const connectTimeout = setTimeout(() => {\r\n      connect();\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearTimeout(connectTimeout);\r\n      disconnect();\r\n    };\r\n  }, []);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (reconnectTimeoutRef.current) {\r\n        clearTimeout(reconnectTimeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    isConnected,\r\n    unreadCount,\r\n    newNotification,\r\n    markAsRead,\r\n    getUnreadCount,\r\n    connect,\r\n    disconnect,\r\n  };\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 947, "column": 0}, "map": {"version":3,"sources":["file:///D:/OfficeProject/lissnify23-9-25/elysian/Front-end/lissnify/src/Components/NotificationBell.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Bell, X, Settings, Check, Trash2 } from 'lucide-react';\r\nimport { useNotifications } from '@/hooks/useNotifications';\r\nimport { useNotificationWebSocket } from '@/hooks/useNotificationWebSocket';\r\n\r\ninterface NotificationBellProps {\r\n  className?: string;\r\n}\r\n\r\nexport default function NotificationBell({ className = '' }: NotificationBellProps) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const dropdownRef = useRef<HTMLDivElement>(null);\r\n  \r\n  const {\r\n    notifications,\r\n    stats,\r\n    settings,\r\n    loading,\r\n    markAsRead,\r\n    markAllAsRead,\r\n    deleteNotification,\r\n    updateSettings,\r\n    refreshStats,\r\n    fetchNotifications,\r\n  } = useNotifications();\r\n\r\n  const {\r\n    isConnected,\r\n    unreadCount,\r\n    newNotification,\r\n  } = useNotificationWebSocket(() => {\r\n    // Refresh stats when a new notification is received\r\n    refreshStats();\r\n  });\r\n\r\n  // Debug logging\r\n  useEffect(() => {\r\n    console.log('🔔 NotificationBell - isConnected:', isConnected);\r\n    console.log('🔔 NotificationBell - unreadCount (WebSocket):', unreadCount);\r\n    console.log('🔔 NotificationBell - stats (API):', stats);\r\n    console.log('🔔 NotificationBell - final count:', unreadCount || stats?.unread_notifications || 0);\r\n  }, [isConnected, unreadCount, stats]);\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\r\n        setIsOpen(false);\r\n        setShowSettings(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  // Show new notification toast\r\n  useEffect(() => {\r\n    if (newNotification) {\r\n      // You can implement a toast notification here\r\n      console.log('New notification:', newNotification);\r\n    }\r\n  }, [newNotification]);\r\n\r\n  const handleMarkAsRead = async (notificationId: number) => {\r\n    try {\r\n      await markAsRead(notificationId);\r\n    } catch (error) {\r\n      console.error('Error marking notification as read:', error);\r\n    }\r\n  };\r\n\r\n  const handleMarkAllAsRead = async () => {\r\n    try {\r\n      await markAllAsRead();\r\n    } catch (error) {\r\n      console.error('Error marking all notifications as read:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteNotification = async (notificationId: number) => {\r\n    try {\r\n      await deleteNotification(notificationId);\r\n    } catch (error) {\r\n      console.error('Error deleting notification:', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateSettings = async (newSettings: any) => {\r\n    try {\r\n      await updateSettings(newSettings);\r\n    } catch (error) {\r\n      console.error('Error updating settings:', error);\r\n    }\r\n  };\r\n\r\n  const handleDropdownToggle = async () => {\r\n    const newIsOpen = !isOpen;\r\n    setIsOpen(newIsOpen);\r\n    \r\n    // If opening the dropdown, refresh notifications\r\n    if (newIsOpen) {\r\n      console.log('🔔 Opening notification dropdown, refreshing notifications...');\r\n      try {\r\n        await fetchNotifications();\r\n        await refreshStats();\r\n      } catch (error) {\r\n        console.error('❌ Error refreshing notifications:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleTestNotification = async () => {\r\n    try {\r\n      console.log('🧪 Creating test notification...');\r\n      const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL || 'https://elysian-birt.onrender.com/api'}/notifications/test/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('adminToken')}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('✅ Test notification created:', data);\r\n        // Refresh notifications\r\n        fetchNotifications();\r\n        refreshStats();\r\n      } else {\r\n        console.error('❌ Failed to create test notification:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error creating test notification:', error);\r\n    }\r\n  };\r\n\r\n  const getNotificationIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'message':\r\n        return '💬';\r\n      case 'connection_request':\r\n        return '👥';\r\n      case 'connection_accepted':\r\n        return '✅';\r\n      case 'connection_rejected':\r\n        return '❌';\r\n      case 'system':\r\n        return '🔔';\r\n      default:\r\n        return '🔔';\r\n    }\r\n  };\r\n\r\n  const formatTimeAgo = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    const now = new Date();\r\n    const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\r\n\r\n    if (diffInSeconds < 60) return 'Just now';\r\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;\r\n    if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`;\r\n    return `${Math.floor(diffInSeconds / 86400)}d ago`;\r\n  };\r\n\r\n  return (\r\n    <div className={`relative ${className}`} ref={dropdownRef}>\r\n      {/* Bell Icon */}\r\n      <button\r\n        onClick={handleDropdownToggle}\r\n        className=\"relative p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-full transition-colors\"\r\n      >\r\n        <Bell className=\"w-6 h-6\" />\r\n        {(() => {\r\n          const count = stats?.unread_notifications || 0;\r\n          return count > 0 && (\r\n            <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\r\n              {count > 99 ? '99+' : count}\r\n            </span>\r\n          );\r\n        })()}\r\n        {!isConnected && (\r\n          <div className=\"absolute -bottom-1 -right-1 w-3 h-3 bg-yellow-400 rounded-full border-2 border-white\"></div>\r\n        )}\r\n      </button>\r\n\r\n      {/* Dropdown */}\r\n      {isOpen && (\r\n        <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\r\n          {/* Header */}\r\n          <div className=\"p-4 border-b border-gray-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                Notifications\r\n                {stats && stats.unread_notifications > 0 && (\r\n                  <span className=\"ml-2 text-sm text-gray-500\">\r\n                    ({stats.unread_notifications} unread)\r\n                  </span>\r\n                )}\r\n              </h3>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <button\r\n                  onClick={handleTestNotification}\r\n                  className=\"p-1 text-blue-400 hover:text-blue-600 rounded text-xs\"\r\n                  title=\"Test notification\"\r\n                >\r\n                  🧪\r\n                </button>\r\n                <button\r\n                  onClick={() => setShowSettings(!showSettings)}\r\n                  className=\"p-1 text-gray-400 hover:text-gray-600 rounded\"\r\n                >\r\n                  <Settings className=\"w-4 h-4\" />\r\n                </button>\r\n                <button\r\n                  onClick={() => setIsOpen(false)}\r\n                  className=\"p-1 text-gray-400 hover:text-gray-600 rounded\"\r\n                >\r\n                  <X className=\"w-4 h-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Settings Panel */}\r\n          {showSettings && settings && (\r\n            <div className=\"p-4 border-b border-gray-200 bg-gray-50\">\r\n              <h4 className=\"text-sm font-medium text-gray-900 mb-3\">Notification Settings</h4>\r\n              <div className=\"space-y-2\">\r\n                {Object.entries(settings).map(([key, value]) => (\r\n                  <label key={key} className=\"flex items-center space-x-2\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={value}\r\n                      onChange={(e) => handleUpdateSettings({ [key]: e.target.checked })}\r\n                      className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n                    />\r\n                    <span className=\"text-sm text-gray-700 capitalize\">\r\n                      {key.replace('_', ' ')}\r\n                    </span>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Notifications List */}\r\n          <div className=\"max-h-96 overflow-y-auto\">\r\n            {loading ? (\r\n              <div className=\"p-4 text-center text-gray-500\">Loading...</div>\r\n            ) : notifications.length === 0 ? (\r\n              <div className=\"p-4 text-center text-gray-500\">No notifications</div>\r\n            ) : (\r\n              <>\r\n            {stats && stats.unread_notifications > 0 && (\r\n              <div className=\"p-2 border-b border-gray-200\">\r\n                <button\r\n                  onClick={handleMarkAllAsRead}\r\n                  className=\"w-full text-left text-sm text-blue-600 hover:text-blue-800 py-1\"\r\n                >\r\n                  Mark all as read\r\n                </button>\r\n              </div>\r\n            )}\r\n                {notifications.map((notification) => (\r\n                  <div\r\n                    key={notification.id}\r\n                    className={`p-4 border-b border-gray-100 hover:bg-gray-50 ${\r\n                      !notification.is_read ? 'bg-blue-50' : ''\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex items-start space-x-3\">\r\n                      <div className=\"text-lg\">\r\n                        {getNotificationIcon(notification.notification_type)}\r\n                      </div>\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <p className=\"text-sm font-medium text-gray-900 truncate\">\r\n                            {notification.title}\r\n                          </p>\r\n                          <div className=\"flex items-center space-x-1\">\r\n                            {!notification.is_read && (\r\n                              <button\r\n                                onClick={() => handleMarkAsRead(notification.id)}\r\n                                className=\"p-1 text-gray-400 hover:text-green-600 rounded\"\r\n                                title=\"Mark as read\"\r\n                              >\r\n                                <Check className=\"w-3 h-3\" />\r\n                              </button>\r\n                            )}\r\n                            <button\r\n                              onClick={() => handleDeleteNotification(notification.id)}\r\n                              className=\"p-1 text-gray-400 hover:text-red-600 rounded\"\r\n                              title=\"Delete\"\r\n                            >\r\n                              <Trash2 className=\"w-3 h-3\" />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        <p className=\"text-sm text-gray-600 mt-1 line-clamp-2\">\r\n                          {notification.message}\r\n                        </p>\r\n                        <div className=\"flex items-center justify-between mt-2\">\r\n                          <p className=\"text-xs text-gray-500\">\r\n                            {formatTimeAgo(notification.created_at)}\r\n                          </p>\r\n                          {notification.sender_username && (\r\n                            <p className=\"text-xs text-gray-500\">\r\n                              from {notification.sender_username}\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          {/* Footer */}\r\n          {stats && (\r\n            <div className=\"p-3 border-t border-gray-200 bg-gray-50\">\r\n              <div className=\"flex justify-between text-xs text-gray-500\">\r\n                <span>Total: {stats.total_notifications}</span>\r\n                <span>Unread: {stats.unread_notifications}</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1498, "column": 0}, "map": {"version":3,"sources":["file:///D:/OfficeProject/lissnify23-9-25/elysian/Front-end/lissnify/src/Components/Navbar.jsx"],"sourcesContent":["\r\n\"use client\";\r\nimport { useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { Heart, Menu, X, Home, Users, MessageCircle, Shield, Sun, Leaf, User, LogOut, LayoutDashboard, BookOpen } from \"lucide-react\";\r\nimport { useAuth } from \"@/contexts/AuthContext\";\r\nimport { getDashboardUrl } from \"@/utils/api\";\r\nimport UserDropdown from \"./UserDropdown\";\r\nimport NotificationBell from \"./NotificationBell\";\r\n\r\nexport default function Navbar() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const { isAuthenticated, isLoading, user, logout } = useAuth();\r\n  const router = useRouter();\r\n\r\n  // Get dashboard URL based on user type\r\n  const getDashboardUrlLocal = () => {\r\n    if (!user) return \"/\";\r\n    return user.user_type === \"seeker\" ? \"/dashboard/seeker\" : \"/dashboard/listener\";\r\n  };\r\n\r\n  // Base navigation items (always shown)\r\n  const baseNavItems = [\r\n    { name: \"Home\", href: \"/\", icon: Home },\r\n    { name: \"Community\", href: \"/community\", icon: Users },\r\n    { name: \"Blog\", href: \"/blog\", icon: BookOpen },\r\n  ];\r\n\r\n  // Dashboard item (only shown when logged in)\r\n  const dashboardItem = { name: \"Dashboard\", href: getDashboardUrlLocal(), icon: LayoutDashboard };\r\n\r\n  // Combine navigation items based on authentication status\r\n  const navItems = isAuthenticated ? [...baseNavItems, dashboardItem] : baseNavItems;\r\n  return (\r\n    <nav className=\"bg-white/95 backdrop-blur-md border-b-3 border-[#FFB88C]/30 px-6 py-2 fixed top-0 left-0 right-0 z-50 shadow-xl\">\r\n\r\n      {/* Subtle background texture */}\r\n      <div className=\"absolute inset-0 bg-gradient-to-r from-[#FFF8B5]/5 to-[#FFB88C]/5 opacity-50\"></div>\r\n\r\n\r\n      {/* Decorative elements */}\r\n      <div className=\"absolute top-0 left-1/4 w-32 h-32 bg-gradient-to-br from-[#FFF8B5]/20 to-[#F9E79F]/10 rounded-full blur-2xl\"></div>\r\n      <div className=\"absolute top-0 right-1/3 w-24 h-24 bg-gradient-to-br from-[#FFB88C]/15 to-[#FFD1A9]/10 rounded-full blur-xl\"></div>\r\n\r\n      <div className=\"container mx-auto flex justify-between items-center relative z-10\">\r\n\r\n        {/* Enhanced Logo with warm styling */}\r\n        <div className=\"flex items-center gap-4 \">\r\n          <Link href=\"/\" className=\"flex items-center hover:opacity-60 transition-opacity duration-600\">\r\n            <img \r\n              src=\"/logo.png\" \r\n              alt=\"Lissnify Logo\" \r\n              className=\"h-16 w-auto\"\r\n            />\r\n          </Link>\r\n        </div>\r\n\r\n        {/* Enhanced Desktop Menu with warm styling */}\r\n        <div className=\"hidden md:flex items-center space-x-2\">\r\n          {navItems.map((item, index) => {\r\n            const IconComponent = item.icon;\r\n            return (\r\n              <Link\r\n                key={index}\r\n                href={item.href}\r\n                className=\"group relative px-5 py-3 rounded-2xl text-black font-bold transition-all duration-300 hover:bg-white/70\"\r\n              >\r\n                <div className=\"flex items-center gap-3\">\r\n                  <span className=\"transition-colors duration-300 text-lg\">{item.name}</span>\r\n                </div>\r\n                <div className=\"absolute bottom-1 left-1/2 transform -translate-x-1/2 w-0 h-1 bg-gradient-to-r from-[#FFB88C] to-[#F9E79F] group-hover:w-3/4 transition-all duration-300 rounded-full\"></div>\r\n              </Link>\r\n            );\r\n          })}\r\n\r\n          {/* Authentication Section */}\r\n          <div className=\"ml-8 pl-4 border-l-3 border-[#FFB88C]/40 flex items-center gap-3 relative\">\r\n            {!isLoading && (\r\n              <>\r\n                {isAuthenticated ? (\r\n                  // Show notification bell and user dropdown when logged in\r\n                  <>\r\n                    <NotificationBell />\r\n                    <UserDropdown />\r\n                  </>\r\n                ) : (\r\n                  // Show login/signup buttons when not logged in\r\n                  <>\r\n                    <Link href=\"/login\">\r\n                      <button className=\"group relative px-6 py-2 rounded-2xl text-black font-bold bg-white/70 hover:bg-white/90 transition-all duration-300 transform hover:scale-110 shadow-lg hover:shadow-xl overflow-hidden border-2 border-[#FFB88C]/30\">\r\n                        <span className=\"relative flex items-center gap-2\">\r\n                          Login\r\n                        </span>\r\n                      </button>\r\n                    </Link>\r\n                    <Link href=\"/signup\">\r\n                      <button className=\"group relative px-6 py-2 rounded-2xl text-white font-bold bg-gradient-to-r from-[#CD853F] to-[#D2691E] hover:from-[#D2691E] hover:to-[#CD853F] transition-all duration-300 transform hover:scale-110 shadow-2xl hover:shadow-3xl overflow-hidden border-2 border-white/30\">\r\n                        <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-700\"></div>\r\n                        <span className=\"relative flex items-center gap-2\">\r\n                          Sign Up\r\n                        </span>\r\n                      </button>\r\n                    </Link>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Enhanced Mobile Hamburger with warm styling */}\r\n        <button\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          className=\"md:hidden relative w-14 h-14 bg-white/70 backdrop-blur-sm rounded-2xl flex items-center justify-center hover:bg-white/90 transition-all duration-300 focus:outline-none focus:ring-4 focus:ring-[#FFB88C]/30 group shadow-lg border-2 border-[#FFB88C]/20\"\r\n        >\r\n          <div className=\"absolute inset-0 bg-gradient-to-br from-[#FFF8B5]/10 to-[#FFB88C]/5 rounded-2xl\"></div>\r\n          {isOpen ? (\r\n            <X className=\"w-7 h-7 text-[#8B4513] group-hover:text-[#A0522D] transition-colors duration-300 relative z-10\" />\r\n          ) : (\r\n            <Menu className=\"w-7 h-7 text-[#8B4513] group-hover:text-[#A0522D] transition-colors duration-300 relative z-10\" />\r\n          )}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Enhanced Mobile Menu with warm, nurturing design */}\r\n      {isOpen && (\r\n        <div className=\"md:hidden mt-6 bg-white/95 backdrop-blur-md rounded-3xl border-3 border-[#FFB88C]/30 shadow-2xl p-6 mx-4 animate-fadeIn relative overflow-hidden\">\r\n\r\n          {/* Mobile menu background decoration */}\r\n          <div className=\"absolute top-0 right-0 w-24 h-24 bg-gradient-to-br from-[#FFF8B5]/20 to-[#F9E79F]/10 rounded-full blur-2xl\"></div>\r\n          <div className=\"absolute bottom-0 left-0 w-32 h-32 bg-gradient-to-br from-[#FFB88C]/15 to-[#FFD1A9]/10 rounded-full blur-2xl\"></div>\r\n\r\n          <div className=\"space-y-3 relative z-10\">\r\n            {navItems.map((item, index) => {\r\n              const IconComponent = item.icon;\r\n              return (\r\n                <Link\r\n                  key={index}\r\n                  href={item.href}\r\n                  className=\"group flex items-center gap-4 px-5 py-4 rounded-2xl text-[#8B4513] font-bold hover:bg-gradient-to-r hover:from-[#FFF8B5]/20 hover:to-[#FFB88C]/15 transition-all duration-300 hover:shadow-lg hover:scale-105 border-2 border-transparent hover:border-[#FFB88C]/20\"\r\n                  onClick={() => setIsOpen(false)}\r\n                >\r\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-[#FFF8B5]/30 to-[#F9E79F]/20 rounded-2xl flex items-center justify-center group-hover:from-[#FFB88C]/30 group-hover:to-[#F9E79F]/30 transition-all duration-300 group-hover:scale-110 shadow-lg\">\r\n                    <IconComponent className=\"w-6 h-6 text-[#8B4513] group-hover:text-[#A0522D] transition-colors duration-300\" />\r\n                  </div>\r\n                  <span className=\"group-hover:text-[#A0522D] transition-colors duration-300 text-xl\">{item.name}</span>\r\n                  <div className=\"ml-auto w-2 h-2 bg-gradient-to-r from-[#FFB88C] to-[#F9E79F] rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* Mobile Authentication Section */}\r\n          <div className=\"mt-8 pt-6 border-t-2 border-[#FFB88C]/30 relative z-10 space-y-3\">\r\n            {!isLoading && (\r\n              <>\r\n                {isAuthenticated ? (\r\n                  // Show user info in mobile menu when logged in\r\n                  <div className=\"text-center\">\r\n                    <div className=\"flex items-center justify-center gap-4 mb-4\">\r\n                      <div \r\n                        onClick={() => {\r\n                          const profileUrl = getDashboardUrlLocal() + '/profile';\r\n                          router.push(profileUrl);\r\n                          setIsOpen(false);\r\n                        }}\r\n                        className=\"w-16 h-16 bg-gradient-to-r from-orange-400 to-yellow-400 rounded-full flex items-center justify-center cursor-pointer hover:scale-105 transition-transform duration-200\"\r\n                      >\r\n                        <User className=\"w-8 h-8 text-white\" />\r\n                      </div>\r\n                      <div className=\"flex items-center\">\r\n                        <NotificationBell />\r\n                      </div>\r\n                    </div>\r\n                    <p \r\n                      onClick={() => {\r\n                        const profileUrl = getDashboardUrlLocal() + '/profile';\r\n                        router.push(profileUrl);\r\n                        setIsOpen(false);\r\n                      }}\r\n                      className=\"text-lg font-bold text-black mb-4 cursor-pointer hover:text-orange-600 transition-colors duration-200\"\r\n                    >\r\n                      Hello, {user?.full_name}\r\n                    </p>\r\n                    <button\r\n                      onClick={() => {\r\n                        logout();\r\n\r\n                        // 2. Then, clear the browser storage.\r\n                        localStorage.clear();\r\n                        localStorage.removeItem(\"adminToken\");\r\n                        // 3. Finally, close the menu.\r\n                        setIsOpen(false);\r\n                      }}\r\n                      className=\"group w-full relative px-8 py-4 rounded-2xl text-red-600 font-bold bg-white/70 hover:bg-red-50 transition-all duration-300 shadow-lg hover:shadow-xl overflow-hidden border-2 border-red-200 hover:border-red-300\"\r\n                    >\r\n                      <span className=\"relative flex items-center justify-center gap-3 text-xl\">\r\n                        <LogOut className=\"w-6 h-6\" />\r\n                        Sign Out\r\n                      </span>\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  // Show login/signup buttons when not logged in\r\n                  <>\r\n                    <Link href=\"/login\" onClick={() => setIsOpen(false)}>\r\n                      <button className=\"group w-full relative px-8 py-4 rounded-2xl text-black font-bold bg-white/70 hover:bg-white/90 transition-all duration-300 shadow-lg hover:shadow-xl overflow-hidden border-2 border-[#FFB88C]/30\">\r\n                        <span className=\"relative flex items-center justify-center gap-3 text-xl\">\r\n                          Login\r\n                        </span>\r\n                      </button>\r\n                    </Link>\r\n                    <Link href=\"/signup\" onClick={() => setIsOpen(false)}>\r\n                      <button className=\"group w-full relative px-8 py-4 rounded-2xl text-white font-bold bg-gradient-to-r from-[#CD853F] to-[#D2691E] hover:from-[#D2691E] hover:to-[#CD853F] transition-all duration-300 shadow-2xl hover:shadow-3xl overflow-hidden hover:scale-105 border-2 border-white/30\">\r\n                        <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-700\"></div>\r\n                        <span className=\"relative flex items-center justify-center gap-3 text-xl\">\r\n                          Sign Up\r\n                        </span>\r\n                      </button>\r\n                    </Link>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Enhanced custom styles with warm animations */}\r\n      <style jsx>{`\r\n        @keyframes fadeIn {\r\n          from {\r\n            opacity: 0;\r\n            transform: translateY(-15px) scale(0.95);\r\n          }\r\n          to {\r\n            opacity: 1;\r\n            transform: translateY(0) scale(1);\r\n          }\r\n        }\r\n        \r\n        .animate-fadeIn {\r\n          animation: fadeIn 0.4s ease-out;\r\n        }\r\n        \r\n        .shadow-3xl {\r\n          box-shadow: 0 25px 50px -12px rgba(139, 69, 19, 0.25);\r\n        }\r\n        \r\n        .border-3 {\r\n          border-width: 3px;\r\n        }\r\n        \r\n        nav {\r\n          position: fixed !important;\r\n          top: 0 !important;\r\n          left: 0 !important;\r\n          right: 0 !important;\r\n          z-index: 9999 !important;\r\n          width: 100% !important;\r\n        }\r\n      `}</style>\r\n    </nav>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2033, "column": 0}, "map": {"version":3,"sources":["file:///D:/OfficeProject/lissnify23-9-25/elysian/Front-end/lissnify/src/Components/DashboardSidebar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState } from \"react\";\r\nimport { useRouter, usePathname } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport {\r\n  LayoutDashboard,\r\n  MessageSquare,\r\n  Users,\r\n  Calendar,\r\n  Users2,\r\n  Settings,\r\n  LogOut,\r\n  Menu,\r\n  X,\r\n  User,\r\n  Star,\r\n\r\n} from \"lucide-react\";\r\n\r\ninterface DashboardSidebarProps {\r\n  userType: 'seeker' | 'listener';\r\n}\r\n\r\nexport default function DashboardSidebar({ userType }: DashboardSidebarProps) {\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\r\n  const router = useRouter();\r\n  const pathname = usePathname();\r\n\r\n  const seekerNavItems = [\r\n    { id: 'dashboard', label: 'Dashboard', icon: LayoutDashboard, path: '/dashboard/seeker' },\r\n    { id: 'chats', label: 'Chats', icon: MessageSquare, path: '/dashboard/seeker/chats' },\r\n    { id: 'community', label: 'Community', icon: Users2, path: '/community' },\r\n    { id: 'profile', label: 'Profile', icon: User, path: '/dashboard/seeker/profile' },\r\n    { id: 'feedback', label: 'Feedback', icon: Star, path: '/dashboard/seeker/feedback' }\r\n  ];\r\n\r\n  const listenerNavItems = [\r\n    { id: 'dashboard', label: 'Dashboard', icon: LayoutDashboard, path: '/dashboard/listener' },\r\n    { id: 'chats', label: 'Chats', icon: MessageSquare, path: '/dashboard/listener/chats' },\r\n    { id: 'community', label: 'Community', icon: Users2, path: '/community' },\r\n    { id: 'profile', label: 'Profile', icon: User, path: '/dashboard/listener/profile' },\r\n  ];\r\n\r\n  const navItems = userType === 'seeker' ? seekerNavItems : listenerNavItems;\r\n\r\n  const handleNavigation = (path: string) => {\r\n    router.push(path);\r\n    setIsMobileOpen(false); // Close mobile menu after navigation\r\n  };\r\n\r\n  const isActive = (path: string) => {\r\n    return pathname === path;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile Toggle Button */}\r\n      <button\r\n        onClick={() => setIsMobileOpen(!isMobileOpen)}\r\n        className=\"md:hidden fixed top-24 left-4 z-50 p-2 bg-white/90 backdrop-blur-md rounded-lg shadow-lg border border-white/50\"\r\n        aria-label=\"Toggle sidebar\"\r\n      >\r\n        <Menu className=\"w-5 h-5 text-gray-600\" />\r\n      </button>\r\n\r\n      {/* Sidebar */}\r\n      <div className={`fixed left-0 top-20 h-full bg-white/90 backdrop-blur-md shadow-xl border-r border-white/50 z-10 transition-all duration-300 ${isCollapsed ? 'w-20' : 'w-64'\r\n        } ${isMobileOpen ? 'block' : 'hidden'} md:block`}>\r\n        <div className=\"p-6\">\r\n          {/* Brand Section */}\r\n          <div className=\"flex items-center justify-between mb-8\">\r\n            {!isCollapsed && (\r\n              <Link href=\"/\" className=\"flex items-center gap-3 hover:opacity-80 transition-opacity duration-300\">\r\n                <img \r\n                  src=\"/logo.png\" \r\n                  alt=\"Lissnify Logo\" \r\n                  className=\"h-15 w-auto\"\r\n                />\r\n              \r\n              </Link>\r\n            )}\r\n            <button\r\n              onClick={() => setIsCollapsed(!isCollapsed)}\r\n              className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n              aria-label={isCollapsed ? \"Expand sidebar\" : \"Collapse sidebar\"}\r\n            >\r\n              {isCollapsed ? <Menu className=\"w-5 h-5 text-gray-600\" /> : <X className=\"w-5 h-5 text-gray-600\" />}\r\n            </button>\r\n          </div>\r\n\r\n          {/* Navigation Items */}\r\n          <nav className=\"space-y-4\">\r\n            {navItems.map((item) => {\r\n              const IconComponent = item.icon;\r\n              return (\r\n                <button\r\n                  key={item.id}\r\n                  onClick={() => handleNavigation(item.path)}\r\n                  className={`w-full flex items-center gap-3 px-4 py-3 rounded-xl font-medium transition-all duration-200 ${isActive(item.path)\r\n                      ? 'bg-gradient-to-r from-[#FFB88C] to-[#FFF8B5] text-black shadow-lg'\r\n                      : 'text-gray-600 hover:bg-gray-50 hover:text-black'\r\n                    }`}\r\n                  aria-label={item.label}\r\n                >\r\n                  <IconComponent className=\"w-5 h-5 flex-shrink-0\" />\r\n                  {!isCollapsed && <span>{item.label}</span>}\r\n                </button>\r\n              );\r\n            })}\r\n          </nav>\r\n\r\n          {/* Logout Button */}\r\n          <div className={`absolute bottom-6 ${isCollapsed ? 'left-6 right-6' : 'left-6 right-6'}`}>\r\n            <button\r\n              className=\"w-full flex items-center gap-3 px-4 py-3 rounded-xl font-medium text-red-600 hover:bg-red-50 transition-all duration-200\"\r\n              aria-label=\"Logout\"\r\n            >\r\n              <LogOut className=\"w-5 h-5 flex-shrink-0\" />\r\n              {!isCollapsed && <span>Logout</span>}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2280, "column": 0}, "map": {"version":3,"sources":["file:///D:/OfficeProject/lissnify23-9-25/elysian/Front-end/lissnify/src/Components/ProtectedRoute.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useEffect } from 'react';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  redirectTo?: string;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \r\n  children, \r\n  redirectTo = '/login' \r\n}) => {\r\n  const { isAuthenticated, isLoading } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && !isAuthenticated) {\r\n      router.push(redirectTo);\r\n    }\r\n  }, [isAuthenticated, isLoading, router, redirectTo]);\r\n\r\n  // Show loading state while checking authentication\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-yellow-50 to-orange-100\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-orange-500 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show children only if authenticated\r\n  if (!isAuthenticated) {\r\n    return null; // Will redirect in useEffect\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAWA,MAAM,iBAAgD,CAAC,EACrD,QAAQ,EACR,aAAa,QAAQ,EACtB;IACC,MAAM,EAAE,eAAe,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC7C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,aAAa,CAAC,iBAAiB;YAClC,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC;QAAiB;QAAW;QAAQ;KAAW;IAEnD,mDAAmD;IACnD,IAAI,WAAW;QACb,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;;;;IAIrC;IAEA,sCAAsC;IACtC,IAAI,CAAC,iBAAiB;QACpB,OAAO,MAAM,6BAA6B;IAC5C;IAEA,qBAAO;kBAAG;;AACZ;uCAEe","debugId":null}},
    {"offset": {"line": 2352, "column": 0}, "map": {"version":3,"sources":["file:///D:/OfficeProject/lissnify23-9-25/elysian/Front-end/lissnify/src/Components/DashboardLayout.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { ReactNode } from \"react\";\r\nimport Navbar from \"@/Components/Navbar\";\r\nimport DashboardSidebar from \"@/Components/DashboardSidebar\";\r\nimport ProtectedRoute from \"@/Components/ProtectedRoute\";\r\n\r\ninterface DashboardLayoutProps {\r\n  userType: 'seeker' | 'listener';\r\n  children: ReactNode;\r\n}\r\n\r\nexport default function DashboardLayout({ userType, children }: DashboardLayoutProps) {\r\n  return (\r\n    <ProtectedRoute>\r\n      <div className=\"min-h-screen bg-gradient-to-br from-[#FFF8B5] to-[#FFB88C]\">\r\n        <Navbar />\r\n        \r\n        <div className=\"flex pt-20\">\r\n          {/* Left Sidebar */}\r\n          <DashboardSidebar userType={userType} />\r\n          \r\n          {/* Main Content Area */}\r\n          <div className=\"md:ml-64 flex-1 p-4 md:p-8\">\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ProtectedRoute>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AAYe,SAAS,gBAAgB,EAAE,QAAQ,EAAE,QAAQ,EAAwB;IAClF,qBACE,8OAAC,oIAAA,CAAA,UAAc;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,4HAAA,CAAA,UAAM;;;;;8BAEP,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC,sIAAA,CAAA,UAAgB;4BAAC,UAAU;;;;;;sCAG5B,8OAAC;4BAAI,WAAU;sCACZ;;;;;;;;;;;;;;;;;;;;;;;AAMb","debugId":null}},
    {"offset": {"line": 2414, "column": 0}, "map": {"version":3,"sources":["file:///D:/OfficeProject/lissnify23-9-25/elysian/Front-end/lissnify/src/app/dashboard/seeker/chats/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { useSearchParams } from \"next/navigation\";\r\nimport DashboardLayout from \"@/Components/DashboardLayout\";\r\nimport { connectedListeners, startDirectChat, getMessages, markMessagesAsRead, getUnreadCounts } from \"@/utils/api\";\r\nimport { \r\n  MessageCircle, \r\n  Phone, \r\n  Video, \r\n  Send, \r\n  MoreVertical,\r\n  Search,\r\n  X\r\n} from \"lucide-react\";\r\n\r\n// Define proper TypeScript interfaces\r\ninterface ConnectedListener {\r\n  connection_id: number;\r\n  user_id: string;\r\n  full_name: string;\r\n  role: string;\r\n  status: string;\r\n  listener_profile: {\r\n    l_id: string;\r\n    specialty: string;\r\n    avatar?: string;\r\n    lastMessage?: string;\r\n    lastActive?: string;\r\n    unreadCount?: number;\r\n  };\r\n}\r\n\r\ninterface Message {\r\n  id: number;\r\n  content: string;\r\n  author_full_name: string;\r\n  timestamp: string;\r\n  is_read?: boolean;\r\n  is_delivered?: boolean;\r\n  date?: string;\r\n}\r\n\r\nexport default function SeekerChatsPage() {\r\n  const searchParams = useSearchParams();\r\n  const [selectedChat, setSelectedChat] = useState<number | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [connectedListenersData, setConnectedListeners] = useState<ConnectedListener[]>([]);\r\n  const [messagesData, setMessages] = useState<Message[]>([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [chatSocket, setChatSocket] = useState<WebSocket | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState<string | null>(null);\r\n  const [unreadCounts, setUnreadCounts] = useState<{[roomId: number]: number}>({});\r\n  const [roomIdMap, setRoomIdMap] = useState<{[connectionId: number]: number}>({});\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  // Get current user from localStorage or API\r\n  const getCurrentUser = () => {\r\n    // Try to get full_name from localStorage first\r\n    const storedUser = localStorage.getItem('full_name');\r\n    if (storedUser) {\r\n      return storedUser;\r\n    }\r\n    \r\n    // Try to get from stored user data\r\n    const storedUserData = localStorage.getItem('elysian_user');\r\n    if (storedUserData) {\r\n      try {\r\n        const userData = JSON.parse(storedUserData);\r\n        return userData.full_name || userData.name || 'user';\r\n      } catch (error) {\r\n        console.error('Error parsing stored user data:', error);\r\n      }\r\n    }\r\n    \r\n    // Fallback to 'user' if nothing is found\r\n    return 'user';\r\n  };\r\n\r\n  // Function to fetch unread counts\r\n  const fetchUnreadCounts = async () => {\r\n    try {\r\n      const response = await getUnreadCounts();\r\n      if (response.success && response.data) {\r\n        setUnreadCounts(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching unread counts:\", error);\r\n    }\r\n  };\r\n\r\n  // Refresh unread counts periodically\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      fetchUnreadCounts();\r\n    }, 5000); // Refresh every 5 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Notification WebSocket connection for read receipts (DISABLED - using chat WebSocket instead)\r\n  // useEffect(() => {\r\n  //   const accessToken = localStorage.getItem('adminToken');\r\n  //   \r\n  //   // Debug: Check all localStorage keys\r\n  //   console.log(\"🔍 All localStorage keys:\", Object.keys(localStorage));\r\n  //   console.log(\"🔍 All localStorage values:\", Object.fromEntries(Object.entries(localStorage)));\r\n  //   \r\n  //   // Try multiple possible user ID keys\r\n  //   const userId = localStorage.getItem('userId') || \r\n  //                 localStorage.getItem('adminUserId') || \r\n  //                 localStorage.getItem('user_id') ||\r\n  //                 localStorage.getItem('id');\r\n  //   \r\n  //   if (!accessToken) {\r\n  //     console.error(\"❌ No access token found for notifications\");\r\n  //     return;\r\n  //   }\r\n  //   \r\n  //   if (!userId) {\r\n  //     console.error(\"❌ No user ID found for notifications\");\r\n  //     console.log(\"Available keys:\", Object.keys(localStorage));\r\n  //     return;\r\n  //   }\r\n\r\n  //   const wsUrl = `ws://localhost:8000/ws/notifications/${userId}/?token=${accessToken}`;\r\n  //   console.log(`🔔 Connecting to notifications: ${wsUrl}`);\r\n\r\n  //   const notificationWs = new WebSocket(wsUrl);\r\n\r\n  //   notificationWs.onopen = () => {\r\n  //     console.log(\"✅ Notification WebSocket connected\");\r\n  //   };\r\n\r\n  //   notificationWs.onmessage = (event) => {\r\n  //     try {\r\n  //       const data = JSON.parse(event.data);\r\n  //       console.log(\"🔔 Received notification:\", data);\r\n  //       \r\n  //       if (data.type === 'message_read') {\r\n  //         // Update message status to read\r\n  //         const messageIds = data.message_ids || [];\r\n  //         console.log('📖 Received read receipt via notifications:', messageIds);\r\n  //         setMessages(prev => prev.map(msg => \r\n  //           messageIds.includes(msg.id) ? { ...msg, is_read: true } : msg\r\n  //         ));\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error(\"❌ Error parsing notification:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   notificationWs.onerror = (error) => {\r\n  //     console.error(\"❌ Notification WebSocket error:\", error);\r\n  //   };\r\n\r\n  //   notificationWs.onclose = (event) => {\r\n  //     console.log(`🔔 Notification WebSocket closed. Code: ${event.code}`);\r\n  //   };\r\n\r\n  //   return () => {\r\n  //     notificationWs.close();\r\n  //   };\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        // Set current user\r\n        const user = getCurrentUser();\r\n        setCurrentUser(user);\r\n        \r\n        const connectedUsers = await connectedListeners();\r\n        if (connectedUsers.success && connectedUsers.data) {\r\n          // Transform the backend response to match frontend interface\r\n          const transformedConnections = connectedUsers.data.map((conn: any) => ({\r\n            connection_id: conn.connection_id,\r\n            user_id: conn.user_id, // Using full_name as user_id for now\r\n            full_name: conn.full_name,\r\n            role: \"Listener\",\r\n            status: conn.status,\r\n            listener_profile: {\r\n              l_id: conn.id,\r\n              specialty: conn.specialty || \"General Support\", // Use actual specialty if available\r\n              avatar: conn.avatar || conn.full_name.charAt(0).toUpperCase(),\r\n            }\r\n          }));\r\n          \r\n          // Filter out pending connections - only show accepted connections in conversations\r\n          const acceptedConnections = transformedConnections.filter((conn: any) => conn.status === 'Accepted');\r\n          setConnectedListeners(acceptedConnections);\r\n          console.log(\"Accepted Listeners for Conversations:\", acceptedConnections);\r\n          \r\n          // Fetch unread counts\r\n          await fetchUnreadCounts();\r\n        } else {\r\n          setError(\"Failed to fetch connected listeners\");\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching connected listeners:\", err);\r\n        setError(\"Error fetching connected listeners\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Handle URL parameter for pre-selected chat\r\n  useEffect(() => {\r\n    const connectionId = searchParams.get('connectionId');\r\n    if (connectionId && connectedListenersData.length > 0) {\r\n      const connectionIdNum = parseInt(connectionId);\r\n      const listener = connectedListenersData.find(l => l.connection_id === connectionIdNum);\r\n      if (listener) {\r\n        onStartChat(listener);\r\n      }\r\n    }\r\n  }, [searchParams, connectedListenersData]);\r\n\r\n  // WebSocket connection function with retry logic\r\n  const connectToChat = (roomId: number, retryCount = 0) => {\r\n    const accessToken = localStorage.getItem('adminToken');\r\n    \r\n    if (!accessToken) {\r\n      setError(\"No access token found. Please login again.\");\r\n      return;\r\n    }\r\n\r\n    // Close existing socket if any\r\n    if (chatSocket) {\r\n      chatSocket.close();\r\n    }\r\n\r\n    console.log(`🔄 Attempting to connect to chat room ${roomId} (attempt ${retryCount + 1})`);\r\n\r\n    // Add a small delay before creating the WebSocket connection\r\n    setTimeout(() => {\r\n      // Create new WebSocket connection\r\n      const socket = new WebSocket(\r\n        `ws://localhost:8000/ws/chat/${roomId}/?token=${accessToken}`\r\n      );\r\n\r\n    socket.onopen = () => {\r\n      console.log(\"✅ Connected to chat room:\", roomId);\r\n      setIsConnected(true);\r\n      setError(null);\r\n    };\r\n\r\n    socket.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        console.log(\"📨 Received message:\", data);\r\n        \r\n        // Determine if this message is from the current user or the other user\r\n        // Backend sends author.full_name, so we need to handle both formats\r\n        const messageAuthor = data.author?.full_name || data.author_full_name || data.author;\r\n        const isFromCurrentUser = messageAuthor?.trim().toLowerCase() === currentUser?.trim().toLowerCase();\r\n        \r\n        console.log('WebSocket message alignment check:', {\r\n          messageAuthor: messageAuthor?.trim().toLowerCase(),\r\n          currentUser: currentUser?.trim().toLowerCase(),\r\n          isFromCurrentUser,\r\n          message: data.message\r\n        });\r\n        \r\n        // Handle different message types\r\n        if (data.type === 'message_delivered') {\r\n          // Update existing message to delivered status\r\n          setMessages(prev => prev.map(msg => \r\n            msg.id === data.message_id ? { ...msg, is_delivered: true } : msg\r\n          ));\r\n        } else if (data.type === 'message_read') {\r\n          // Update existing message to read status\r\n          const messageIds = data.message_ids || [data.message_id];\r\n          console.log('📖 Received read receipt for messages:', messageIds);\r\n          setMessages(prev => prev.map(msg => \r\n            messageIds.includes(msg.id) ? { ...msg, is_read: true } : msg\r\n          ));\r\n        } else if (data.type === 'new_message') {\r\n          // Only add new message if it's from another user\r\n          if (!isFromCurrentUser) {\r\n            const newMessage: Message = {\r\n              id: data.message_id || Date.now(),\r\n              content: data.message,\r\n              author_full_name: messageAuthor,\r\n              timestamp: new Date().toISOString(),\r\n              is_read: false,\r\n              is_delivered: true\r\n            };\r\n            setMessages(prev => [...prev, newMessage]);\r\n          }\r\n        } else {\r\n          // Fallback for old message format - only add if not from current user\r\n          if (!isFromCurrentUser) {\r\n            const newMessage: Message = {\r\n              id: data.message_id || Date.now(),\r\n              content: data.message,\r\n              author_full_name: messageAuthor,\r\n              timestamp: new Date().toISOString(),\r\n              is_read: false,\r\n              is_delivered: true\r\n            };\r\n            setMessages(prev => [...prev, newMessage]);\r\n          }\r\n        }\r\n        \r\n        // Update unread counts if provided\r\n        if (data.unread_count !== undefined) {\r\n          setUnreadCounts(prev => ({\r\n            ...prev,\r\n            [roomId]: data.unread_count\r\n          }));\r\n        }\r\n\r\n        // Update conversation order when new message arrives\r\n        if (!isFromCurrentUser) {\r\n          // Find the connection ID for this room\r\n          const connectionId = Object.keys(roomIdMap).find(\r\n            key => roomIdMap[parseInt(key)] === roomId\r\n          );\r\n          if (connectionId) {\r\n            updateConversationOrder(parseInt(connectionId));\r\n          }\r\n        }\r\n\r\n        // Don't automatically mark own messages as read\r\n        // They should only show \"Read\" when the receiver actually opens the chat\r\n      } catch (error) {\r\n        console.error(\"❌ Error parsing WebSocket message:\", error);\r\n      }\r\n    };\r\n\r\n    socket.onclose = (event) => {\r\n      console.log(\"🔌 Chat socket closed:\", event.code, event.reason);\r\n      setIsConnected(false);\r\n      \r\n      // Only attempt reconnection if it's not a normal closure and we haven't exceeded max retries\r\n      if (event.code !== 1000 && retryCount < 3) {\r\n        const delay = Math.pow(2, retryCount) * 1000; // Exponential backoff: 1s, 2s, 4s\r\n        console.log(`🔄 Connection lost. Retrying in ${delay}ms (attempt ${retryCount + 1}/3)`);\r\n        setTimeout(() => {\r\n          connectToChat(roomId, retryCount + 1);\r\n        }, delay);\r\n      } else if (retryCount >= 3) {\r\n        setError(\"Failed to connect to chat. Please refresh the page.\");\r\n      }\r\n    };\r\n\r\n    socket.onerror = (error) => {\r\n      console.error(\"❌ WebSocket error:\", error);\r\n      // Don't set error immediately on first attempt - let onclose handle retry logic\r\n      if (retryCount === 0) {\r\n        console.log(\"🔄 Initial connection failed, will retry...\");\r\n      } else {\r\n        setError(\"Connection error occurred\");\r\n        setIsConnected(false);\r\n      }\r\n    };\r\n\r\n      setChatSocket(socket);\r\n    }, retryCount === 0 ? 300 : 0); // Add extra delay only on first attempt\r\n  };\r\n\r\n  // Auto-scroll to bottom when new messages arrive\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messagesData]);\r\n\r\n  // Cleanup WebSocket on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (chatSocket) {\r\n        chatSocket.close();\r\n      }\r\n    };\r\n  }, [chatSocket]);\r\n\r\n  const onStartChat = async (listener: ConnectedListener) => {\r\n    try {\r\n      if(listener.status !== \"Accepted\"){\r\n        alert(\"Connection not accepted yet.\");\r\n        return;\r\n      }\r\n      setLoading(true);\r\n      setError(null);\r\n      console.log(\"Starting chat with listener:\", listener);\r\n      const rooms = await startDirectChat(listener.user_id);\r\n\r\n      if (rooms.success) {\r\n        const roomId = rooms.data.id;\r\n        setSelectedChat(listener.connection_id);\r\n        \r\n        // Store room mapping\r\n        setRoomIdMap(prev => ({\r\n          ...prev,\r\n          [listener.connection_id]: roomId\r\n        }));\r\n\r\n        // Fetch existing messages\r\n        const messages = await getMessages(roomId);\r\n        if (messages.success && messages.data) {\r\n          // Mark only OTHER users' messages as read when opening chat\r\n          const messagesWithReadStatus = messages.data.map((message: Message) => {\r\n            // Only mark messages from OTHER users as read, not our own messages\r\n            if (message.author_full_name !== currentUser) {\r\n              return { ...message, is_read: true };\r\n            }\r\n            return message; // Keep our own messages unchanged\r\n          });\r\n          setMessages(messagesWithReadStatus);\r\n          console.log(\"Chat room created or fetched successfully:\", messagesWithReadStatus);\r\n          \r\n          // Mark messages as read when opening chat\r\n          await markMessagesAsRead(roomId);\r\n          \r\n          // Mark messages as read in UI\r\n          markMessagesAsReadInUI(roomId);\r\n          \r\n          // Send read receipts for messages from OTHER users (not our own messages)\r\n          const unreadMessageIds = messages.data\r\n            .filter((msg: Message) => !msg.is_read && msg.author_full_name !== currentUser)\r\n            .map((msg: Message) => msg.id);\r\n          \r\n          console.log('🔍 Found unread messages from others:', unreadMessageIds);\r\n          if (unreadMessageIds.length > 0) {\r\n            sendReadReceipt(roomId, unreadMessageIds);\r\n          } else {\r\n            console.log('ℹ️ No unread messages to mark as read');\r\n          }\r\n          \r\n          // Update unread counts\r\n          await fetchUnreadCounts();\r\n        } else {\r\n          setError(\"Failed to fetch messages\");\r\n        }\r\n\r\n        // Connect to WebSocket for real-time messaging with a delay\r\n        setTimeout(() => {\r\n          connectToChat(roomId);\r\n        }, 800);\r\n      } else {\r\n        setError(\"Failed to start chat\");\r\n        console.error(\"Failed to start chat:\", rooms);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error starting chat:\", error);\r\n      setError(\"Error starting chat\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  const getSelectedListener = () => {\r\n    return connectedListenersData.find(listener => listener.connection_id === selectedChat);\r\n  };\r\n\r\n  // Function to group messages by date\r\n  const groupMessagesByDate = (messages: Message[]) => {\r\n    const groups: { [key: string]: Message[] } = {};\r\n    \r\n    messages.forEach(message => {\r\n      // Handle both string and Date timestamps\r\n      let messageDate: Date;\r\n      if (typeof message.timestamp === 'string') {\r\n        // Try to parse the timestamp string\r\n        messageDate = new Date(message.timestamp);\r\n        // If invalid date, use current date\r\n        if (isNaN(messageDate.getTime())) {\r\n          messageDate = new Date();\r\n        }\r\n      } else {\r\n        messageDate = message.timestamp;\r\n      }\r\n      \r\n      const today = new Date();\r\n      const yesterday = new Date(today);\r\n      yesterday.setDate(yesterday.getDate() - 1);\r\n      \r\n      let dateKey: string;\r\n      if (messageDate.toDateString() === today.toDateString()) {\r\n        dateKey = 'Today';\r\n      } else if (messageDate.toDateString() === yesterday.toDateString()) {\r\n        dateKey = 'Yesterday';\r\n      } else {\r\n        dateKey = messageDate.toLocaleDateString('en-US', { \r\n          month: 'short', \r\n          day: 'numeric' \r\n        });\r\n      }\r\n      \r\n      if (!groups[dateKey]) {\r\n        groups[dateKey] = [];\r\n      }\r\n      groups[dateKey].push({\r\n        ...message,\r\n        date: dateKey\r\n      });\r\n    });\r\n    \r\n    return groups;\r\n  };\r\n\r\n  // Function to get the last read message index\r\n  const getLastReadIndex = (messages: Message[]) => {\r\n    for (let i = messages.length - 1; i >= 0; i--) {\r\n      if (messages[i].is_read === true) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  // Function to sort conversations by most recent activity\r\n  const sortConversationsByActivity = (listeners: ConnectedListener[]) => {\r\n    return [...listeners].sort((a, b) => {\r\n      const roomIdA = roomIdMap[a.connection_id];\r\n      const roomIdB = roomIdMap[b.connection_id];\r\n      \r\n      // If one is selected, it should go to bottom\r\n      if (a.connection_id === selectedChat) return 1;\r\n      if (b.connection_id === selectedChat) return -1;\r\n      \r\n      // Sort by unread count (unread messages first)\r\n      const unreadCountA = roomIdA ? unreadCounts[roomIdA] || 0 : 0;\r\n      const unreadCountB = roomIdB ? unreadCounts[roomIdB] || 0 : 0;\r\n      \r\n      if (unreadCountA > 0 && unreadCountB === 0) return -1;\r\n      if (unreadCountA === 0 && unreadCountB > 0) return 1;\r\n      \r\n      // If both have unread or both don't, sort alphabetically\r\n      return a.full_name.localeCompare(b.full_name);\r\n    });\r\n  };\r\n\r\n  // Function to update conversation order when new message arrives\r\n  const updateConversationOrder = (connectionId: number) => {\r\n    setConnectedListeners(prev => {\r\n      const updated = [...prev];\r\n      const index = updated.findIndex(listener => listener.connection_id === connectionId);\r\n      if (index > -1) {\r\n        const [movedListener] = updated.splice(index, 1);\r\n        // Move to top if not selected, or keep at bottom if selected\r\n        if (connectionId !== selectedChat) {\r\n          updated.unshift(movedListener);\r\n        } else {\r\n          updated.push(movedListener);\r\n        }\r\n      }\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  // Function to mark messages as read when receiver opens chat\r\n  const markMessagesAsReadInUI = (roomId: number) => {\r\n    setMessages(prev => prev.map(msg => {\r\n      // Only mark messages from OTHER users as read, not our own messages\r\n      if (msg.author_full_name !== currentUser) {\r\n        return { ...msg, is_read: true };\r\n      }\r\n      return msg; // Keep our own messages unchanged\r\n    }));\r\n  };\r\n\r\n  // Function to send read receipt to sender\r\n  const sendReadReceipt = (roomId: number, messageIds: number[]) => {\r\n    if (chatSocket && chatSocket.readyState === WebSocket.OPEN) {\r\n      console.log('📤 Sending read receipt for messages:', messageIds, 'in room:', roomId);\r\n      chatSocket.send(JSON.stringify({\r\n        type: 'mark_messages_read',\r\n        room_id: roomId,\r\n        message_ids: messageIds\r\n      }));\r\n    } else {\r\n      console.log('❌ WebSocket not connected, cannot send read receipt');\r\n    }\r\n  };\r\n\r\n  const filteredListeners = sortConversationsByActivity(\r\n    connectedListenersData.filter(listener =>\r\n      listener.full_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      (listener.listener_profile?.specialty || '').toLowerCase().includes(searchTerm.toLowerCase())\r\n    )\r\n  );\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!newMessage.trim() || !selectedChat || !chatSocket || !isConnected) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Generate unique message ID to prevent duplicates\r\n      const messageId = Date.now() + Math.random();\r\n      \r\n      // Add message to UI immediately with \"Sent\" status\r\n      const tempMessage: Message = {\r\n        id: messageId,\r\n        content: newMessage.trim(),\r\n        author_full_name: currentUser || 'You',\r\n        timestamp: new Date().toISOString(),\r\n        is_read: false,\r\n        is_delivered: false // Initially not delivered\r\n      };\r\n      setMessages(prev => [...prev, tempMessage]);\r\n      \r\n      // Send message via WebSocket with message ID\r\n      chatSocket.send(JSON.stringify({\r\n        'message': newMessage.trim(),\r\n        'author_full_name': currentUser,\r\n        'message_id': messageId,\r\n        'type': 'send_message'\r\n      }));\r\n      \r\n      // Clear the input field immediately for better UX\r\n      setNewMessage('');\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      setError(\"Failed to send message\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCloseChat = () => {\r\n    if (chatSocket) {\r\n      chatSocket.close();\r\n      setChatSocket(null);\r\n    }\r\n    setSelectedChat(null);\r\n    setMessages([]);\r\n    setIsConnected(false);\r\n  };\r\n  const handleClick=()=>{\r\n    alert(\"Feature coming soon\")\r\n  }\r\n  return (\r\n    <DashboardLayout userType=\"seeker\">\r\n      <div className=\"h-[calc(100vh-120px)]\">\r\n        {/* Top Header - Always Visible */}\r\n        \r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 h-[calc(100%-120px)]\">\r\n                {/* Left Panel - Chat List */}\r\n                <div className=\"lg:col-span-1\">\r\n                  <div className=\"bg-white/90 backdrop-blur-sm rounded-3xl p-6 shadow-xl border border-orange-100 h-full flex flex-col\">\r\n                    <div className=\"mb-6\">\r\n                      <h3 className=\"text-xl font-bold text-gray-800 mb-4\">Active Conversations</h3>\r\n                      \r\n                      {/* Search Bar */}\r\n                      <div className=\"relative mb-4\">\r\n                        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-orange-400 w-4 h-4\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Search conversations...\"\r\n                          value={searchTerm}\r\n                          onChange={(e) => setSearchTerm(e.target.value)}\r\n                          className=\"w-full pl-10 pr-4 py-3 border border-orange-200 rounded-xl focus:ring-2 focus:ring-orange-300 focus:border-orange-300 transition-all duration-200 bg-white shadow-sm\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex-1 overflow-y-auto space-y-3\">\r\n                      {loading ? (\r\n                        <div className=\"flex items-center justify-center p-4\">\r\n                          <div className=\"text-gray-500\">Loading conversations...</div>\r\n                        </div>\r\n                      ) : error ? (\r\n                        <div className=\"flex items-center justify-center p-4\">\r\n                          <div className=\"text-red-500\">{error}</div>\r\n                        </div>\r\n                      ) : filteredListeners.length === 0 ? (\r\n                        <div className=\"flex items-center justify-center p-4\">\r\n                          <div className=\"text-gray-500\">No active conversations found</div>\r\n                        </div>\r\n                      ) : (\r\n                        filteredListeners.map((listener) => (\r\n                          <div\r\n                            key={listener.connection_id}\r\n                            onClick={() => onStartChat(listener)}\r\n                            className={`p-4 rounded-xl cursor-pointer transition-all duration-200 hover:bg-orange-50 ${\r\n                              selectedChat === listener.connection_id ? 'bg-gradient-to-r from-orange-100 to-orange-50 border border-orange-200 shadow-md' : 'hover:shadow-sm'\r\n                            }`}\r\n                          >\r\n                            <div className=\"flex items-center gap-3\">\r\n                              <div className=\"relative\">\r\n                                <div className=\"w-12 h-12 bg-gradient-to-br from-orange-400 to-orange-500 rounded-full flex items-center justify-center text-white font-bold text-sm shadow-md\">\r\n                                  {listener.listener_profile.avatar || listener.full_name.charAt(0).toUpperCase()}\r\n                                </div>\r\n                                <span className={`absolute -bottom-1 -right-1 w-4 h-4 rounded-full border-2 border-white ${\r\n                                  listener.status === 'Accepted' ? 'bg-green-400' : 'bg-gray-400'\r\n                                }`}></span>\r\n                              </div>\r\n                              <div className=\"flex-1 min-w-0\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                  <h4 className=\"font-semibold text-gray-800 truncate\">{listener.full_name}</h4>\r\n                                  {(() => {\r\n                                    const roomId = roomIdMap[listener.connection_id];\r\n                                    const unreadCount = roomId ? unreadCounts[roomId] || 0 : 0;\r\n                                    return unreadCount > 0 ? (\r\n                                      <span className=\"bg-orange-500 text-white text-xs rounded-full px-2 py-1 min-w-[20px] text-center font-medium animate-pulse flex-shrink-0\">\r\n                                        {unreadCount}\r\n                                      </span>\r\n                                    ) : null;\r\n                                  })()}\r\n                                </div>\r\n                                <p className=\"text-sm text-gray-600 truncate\">{listener.listener_profile.specialty}</p>\r\n                                <p className=\"text-xs text-orange-500 font-medium\">{listener.status}</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ))\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Right Panel - Chat Area */}\r\n                <div className=\"lg:col-span-2 h-full\">\r\n                  {selectedChat ? (\r\n                    /* Chat Interface */\r\n                    <div className=\"bg-white/80 backdrop-blur-sm rounded-3xl shadow-xl border border-white/50 h-full flex flex-col\">\r\n                      {/* Chat Header */}\r\n                      <div className=\"bg-gradient-to-r from-orange-400 to-orange-300 p-6 border-b border-orange-200 flex-shrink-0 shadow-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"flex items-center gap-4\">\r\n                            <div className=\"w-12 h-12 bg-white rounded-full flex items-center justify-center text-orange-500 font-bold text-lg shadow-md\">\r\n                              {getSelectedListener()?.listener_profile.avatar || getSelectedListener()?.full_name.charAt(0).toUpperCase()}\r\n                            </div>\r\n                            <div>\r\n                              <div className=\"flex items-center gap-3\">\r\n                                <h4 className=\"font-semibold text-white text-lg\">{getSelectedListener()?.full_name}</h4>\r\n                                <div className={`w-3 h-3 rounded-full ${isConnected ? 'bg-green-400' : 'bg-red-400'} shadow-sm`}></div>\r\n                              </div>\r\n                              <p className=\"text-sm text-white/90 font-medium\">{getSelectedListener()?.listener_profile.specialty}</p>\r\n                              <p className=\"text-xs text-white/70\">\r\n                                {isConnected ? 'Online' : 'Offline'}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex items-center gap-3\">\r\n                            <button onClick={handleClick} className=\"p-3 hover:bg-white/20 rounded-xl transition-all duration-200 hover:scale-105\">\r\n                              <Phone className=\"w-5 h-5 text-white\" />\r\n                            </button>\r\n                            <button onClick={handleClick} className=\"p-3 hover:bg-white/20 rounded-xl transition-all duration-200 hover:scale-105\">\r\n                              <Video className=\"w-5 h-5 text-white\" />\r\n                            </button>\r\n                            <button onClick={handleClick} className=\"p-3 hover:bg-white/20 rounded-xl transition-all duration-200 hover:scale-105\">\r\n                              <MoreVertical className=\"w-5 h-5 text-white\" />\r\n                            </button>\r\n                            <button \r\n                              onClick={handleCloseChat}\r\n                              className=\"p-3 hover:bg-white/20 rounded-xl transition-all duration-200 hover:scale-105\"\r\n                              title=\"Close chat\"\r\n                            >\r\n                              <X className=\"w-5 h-5 text-white\" />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Chat Messages */}\r\n                      <div className=\"flex-1 overflow-y-auto p-6 min-h-0 max-h-[calc(100vh-300px)] bg-gradient-to-b from-orange-50/30 to-white\">\r\n                        {messagesData.length === 0 ? (\r\n                          <div className=\"flex items-center justify-center h-full\">\r\n                            <div className=\"text-center text-gray-500\">\r\n                              <MessageCircle className=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\r\n                              <p>No messages yet. Start the conversation!</p>\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"space-y-6\">\r\n                            {Object.entries(groupMessagesByDate(messagesData)).map(([dateKey, messages]) => (\r\n                              <div key={dateKey}>\r\n                                {/* Date separator */}\r\n                                <div className=\"flex items-center justify-center my-4\">\r\n                                  <div className=\"flex items-center gap-2\">\r\n                                    <div className=\"h-px bg-gray-300 flex-1\"></div>\r\n                                    <span className=\"text-xs text-gray-500 bg-white px-3 py-1 rounded-full\">\r\n                                      {dateKey}\r\n                                    </span>\r\n                                    <div className=\"h-px bg-gray-300 flex-1\"></div>\r\n                                  </div>\r\n                                </div>\r\n                                \r\n                                {/* Messages for this date */}\r\n                                {messages.map((message, index) => {\r\n                                  // Determine if this message is from the current user\r\n                                  const messageAuthor = message.author_full_name?.trim().toLowerCase();\r\n                                  const currentUserName = currentUser?.trim().toLowerCase();\r\n                                  const isFromCurrentUser = messageAuthor === currentUserName;\r\n                                  \r\n                                  return (\r\n                                    <div\r\n                                      key={message.id}\r\n                                      className={`flex items-start gap-3 ${isFromCurrentUser ? 'justify-end' : 'justify-start'} mb-4`}\r\n                                    >\r\n                                      {/* Avatar for receiver messages (left side) */}\r\n                                      {!isFromCurrentUser && (\r\n                                        <div className=\"flex-shrink-0\">\r\n                                          <div className=\"w-10 h-10 bg-gradient-to-br from-orange-400 to-orange-500 rounded-full flex items-center justify-center text-white font-bold text-sm shadow-md\">\r\n                                            {message.author_full_name?.charAt(0)?.toUpperCase() || 'U'}\r\n                                          </div>\r\n                                        </div>\r\n                                      )}\r\n                                      \r\n                                      {/* Message content */}\r\n                                      <div className={`flex flex-col max-w-xs lg:max-w-md ${isFromCurrentUser ? 'items-end' : 'items-start'}`}>\r\n                                        {/* Name and timestamp display */}\r\n                                        <div className={`text-xs mb-2 px-1 ${isFromCurrentUser ? 'text-right' : 'text-left'}`}>\r\n                                          <span className=\"font-medium text-gray-600\">\r\n                                            {message.author_full_name}\r\n                                          </span>\r\n                                          <span className=\"text-gray-400 ml-2\">\r\n                                            {(() => {\r\n                                              try {\r\n                                                const date = new Date(message.timestamp);\r\n                                                if (isNaN(date.getTime())) {\r\n                                                  return message.timestamp; // Return original if invalid\r\n                                                }\r\n                                                return date.toLocaleTimeString('en-US', { \r\n                                                  hour: '2-digit', \r\n                                                  minute: '2-digit',\r\n                                                  hour12: false \r\n                                                });\r\n                                              } catch (error) {\r\n                                                return message.timestamp;\r\n                                              }\r\n                                            })()}\r\n                                          </span>\r\n                                        </div>\r\n                                        \r\n                                        {/* Message bubble */}\r\n                                        <div\r\n                                          className={`px-4 py-3 rounded-2xl shadow-sm ${\r\n                                            isFromCurrentUser\r\n                                              ? 'bg-gradient-to-r from-orange-400 to-orange-500 text-white'\r\n                                              : message.is_read === false\r\n                                              ? 'bg-blue-50 text-gray-800 border-2 border-blue-200 shadow-md' // Unread message styling\r\n                                              : 'bg-white text-gray-800 border border-gray-100'\r\n                                          }`}\r\n                                        >\r\n                                          <p className=\"text-sm leading-relaxed\">{message.content}</p>\r\n                                          {!isFromCurrentUser && message.is_read === false && (\r\n                                            <div className=\"flex items-center justify-end mt-1\">\r\n                                              <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\r\n                                            </div>\r\n                                          )}\r\n                                        </div>\r\n                                        \r\n                                        {/* Read status indicator for seeker messages */}\r\n                                        {isFromCurrentUser && (\r\n                                          <div className=\"flex items-center justify-end mt-1 gap-1\">\r\n                                            {message.is_read ? (\r\n                                              <div className=\"flex items-center gap-1\">\r\n                                                <div className=\"w-4 h-4 bg-blue-500 rounded-full flex items-center justify-center\">\r\n                                                  <svg className=\"w-2.5 h-2.5 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                                                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                                                  </svg>\r\n                                                </div>\r\n                                                <span className=\"text-xs text-blue-600 font-medium\">Read</span>\r\n                                              </div>\r\n                                            ) : message.is_delivered ? (\r\n                                              <div className=\"flex items-center gap-1\">\r\n                                                <div className=\"w-4 h-4 bg-green-500 rounded-full flex items-center justify-center\">\r\n                                                  <svg className=\"w-2.5 h-2.5 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                                                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                                                  </svg>\r\n                                                </div>\r\n                                                <span className=\"text-xs text-green-600 font-medium\">Delivered</span>\r\n                                              </div>\r\n                                            ) : (\r\n                                              <div className=\"flex items-center gap-1\">\r\n                                                <div className=\"w-4 h-4 bg-gray-400 rounded-full flex items-center justify-center\">\r\n                                                  <div className=\"w-2 h-2 bg-white rounded-full\"></div>\r\n                                                </div>\r\n                                                <span className=\"text-xs text-gray-500\">Sent</span>\r\n                                              </div>\r\n                                            )}\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                      \r\n                                      {/* Avatar for sender messages (right side) */}\r\n                                      {isFromCurrentUser && (\r\n                                        <div className=\"flex-shrink-0\">\r\n                                          <div className=\"w-10 h-10 bg-gradient-to-br from-orange-400 to-orange-500 rounded-full flex items-center justify-center text-white font-bold text-sm shadow-md\">\r\n                                            {message.author_full_name?.charAt(0)?.toUpperCase() || 'U'}\r\n                                          </div>\r\n                                        </div>\r\n                                      )}\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                        <div ref={messagesEndRef} />\r\n                      </div>\r\n\r\n                      {/* Chat Input */}\r\n                      <div className=\"p-6 border-t border-orange-100 flex-shrink-0 bg-white\">\r\n                        <div className=\"flex items-center gap-4\">\r\n                          <div className=\"flex-1 relative\">\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Type a message...\"\r\n                              value={newMessage}\r\n                              onChange={(e) => setNewMessage(e.target.value)}\r\n                              onKeyPress={(e) => {\r\n                                if (e.key === 'Enter' && newMessage.trim()) {\r\n                                  handleSendMessage();\r\n                                }\r\n                              }}\r\n                              className=\"w-full px-6 py-4 pr-16 border border-gray-200 rounded-full focus:ring-2 focus:ring-orange-300 focus:border-orange-300 transition-all duration-200 bg-white shadow-sm text-gray-700 placeholder-gray-400\"\r\n                            />\r\n                            <div className=\"absolute right-4 top-1/2 transform -translate-y-1/2 flex items-center gap-2\">\r\n                              <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-green-400' : 'bg-red-400'}`}></div>\r\n                            </div>\r\n                          </div>\r\n                          <button \r\n                            onClick={handleSendMessage}\r\n                            disabled={!newMessage.trim() || loading || !isConnected}\r\n                            className=\"p-4 bg-gradient-to-r from-orange-400 to-orange-500 text-white rounded-full hover:from-orange-500 hover:to-orange-600 transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed shadow-lg hover:shadow-xl transform hover:scale-105\"\r\n                            title={!isConnected ? \"Not connected to chat\" : \"Send message\"}\r\n                          >\r\n                            <Send className=\"w-5 h-5\" />\r\n                          </button>\r\n                        </div>\r\n                        {!isConnected && (\r\n                          <div className=\"mt-3 text-center\">\r\n                            <span className=\"text-xs text-red-400 bg-red-50 px-3 py-1 rounded-full\">Disconnected from chat</span>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    /* Placeholder when no chat is selected */\r\n                    <div className=\"bg-white/90 backdrop-blur-sm rounded-3xl shadow-xl border border-orange-100 h-full flex items-center justify-center\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"w-20 h-20 bg-gradient-to-br from-orange-200 to-orange-300 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\r\n                          <MessageCircle className=\"w-10 h-10 text-orange-600\" />\r\n                        </div>\r\n                        <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">Select a Conversation</h3>\r\n                        <p className=\"text-gray-600 max-w-sm\">Choose a conversation from the left panel to start messaging</p>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}